geom_point() +
scale_colour_manual(values=rep(brewer.pal(6,"Paired"))) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab(expression(paste("Heterotrophic Rsoil (MgC ",ha^-1,mo^-1, ")", sep=""))) +
ylim(0, 3) + xlim(xmin, xmax)
fig3 <- grid.arrange(paa, pbb, pcc, ncol=1, nrow=3)
fig3
str(aa)
str(Res)
head(Res$date)
Res$year
soil_resp_sea  <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/soil respiration/SAFE_SoilRespiration_Data_toCecile3.csv", sep=",", header=T, fill = TRUE)
Res <- subset(soil_resp_sea, soil_resp_sea$Quality == 1 & soil_resp_sea$Collar.type == "C3")
str(Res)
Res$plot_code <- Res$Plot
Res$plot_code <- revalue(Res$plot_code, c("Tower" = "SAF-05","E" = "SAF-03","B South" = "SAF-01","B North" = "SAF-02","Belian" =  "MLA-01","Seraya" = "MLA-02","LF" = "SAF-04","DC1" = "DAN-04","DC2" = "DAN-05"))
Res$datetest <- as.Date(paste(Res$year, Res$month, Res$day, sep="."), format="%Y.%m.%d")
head(Res)
soil_resp_sea  <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/soil respiration/SAFE_SoilRespiration_Data_toCecile3.csv", sep=",", header=T, fill = TRUE)
head(soil_resp_sea)
Res <- subset(soil_resp_sea, soil_resp_sea$Quality == 1 & soil_resp_sea$Collar_type == "C3")
Res$plot_code <- Res$Plot
Res$plot_code <- revalue(Res$plot_code, c("Tower" = "SAF-05","E" = "SAF-03","B South" = "SAF-01","B North" = "SAF-02","Belian" =  "MLA-01","Seraya" = "MLA-02","LF" = "SAF-04","DC1" = "DAN-04","DC2" = "DAN-05"))
Res$date <- as.Date(paste(Res$year, Res$month, Res$day, sep="."), format="%Y.%m.%d")
Res$Flux_Mg_C_ha_month <- as.numeric(as.character(Res$Flux_MgC_ha_month))
head(Res)
str(Res)
aa = subset(Res, plot_code %in% c("SAF-01", "SAF-02", "SAF-03", "SAF-04", "SAF-05"))
bb = subset(Res, plot_code %in% c("MLA-01", "MLA-02"))
cc = subset(Res, plot_code %in% c("DAN-04", "DAN-05"))
dd = subset(Res, plot_code=="OP")
xmin = min(aa$date, na.rm=T)
xmax = max(aa$date, na.rm=T)
paa <- ggplot(aa, aes(x = date, y = Flux_Mg_C_ha_month, colour = factor(aa$plot_code), na.rm = T)) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(6,"Paired"))) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab(expression(paste("Heterotrophic Rsoil (MgC ",ha^-1,mo^-1, ")", sep=""))) +
ylim(0, 3)
pbb <- ggplot(bb, aes(x = date, y = Flux_Mg_C_ha_month, colour = factor(bb$plot_code), na.rm = T)) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(6,"Paired"))) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab(expression(paste("Heterotrophic Rsoil (MgC ",ha^-1,mo^-1, ")", sep=""))) +
ylim(0, 3) + xlim(xmin, xmax)
pcc <- ggplot(cc, aes(x = date, y = Flux_Mg_C_ha_month, colour = factor(cc$plot_code), na.rm = T)) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(6,"Paired"))) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab(expression(paste("Heterotrophic Rsoil (MgC ",ha^-1,mo^-1, ")", sep=""))) +
ylim(0, 3) + xlim(xmin, xmax)
fig3 <- grid.arrange(paa, pbb, pcc, ncol=1, nrow=3)
fig3
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/soilrespiration_auxfunctions.r")
temp = (subset(stem_resp, plot_code %in% c("SAF-01", "SAF-02", "SAF-03", "SAF-04", "SAF-05", "DAN-04", "DAN-05", "MLA-01", "MLA-02")))
rstemsea  = (subset(temp, quality_code == 1))
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/stem_respiration_percollar_2017.R")
stem_resp <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/stem respiration/stem_resp_26April.csv", sep=",", header=T)
stem_resp <- subset(stem_resp, select=c(1:20))
temp = (subset(stem_resp, plot_code %in% c("SAF-01", "SAF-02", "SAF-03", "SAF-04", "SAF-05", "DAN-04", "DAN-05", "MLA-01", "MLA-02")))
rstemsea  = (subset(temp, quality_code == 1))
str(rstemsea)
unique(rstemsea$InputF)
rstemsea$slope = as.numeric(as.character(rstemsea$InputF))
head(rstemsea)
rstemsea$codew   <- paste(rstemsea$plot_code, rstemsea$sub_plot, rstemsea$tree_tag, rstemsea$day, rstemsea$month, rstemsea$year, sep=".")
rstemsea$soil_temp     = 25
rstemsea$collar_diam   = 12
rstemsea$atmp          = mean(as.numeric(rstemsea$atmp_mb), na.rm=T)
rstemsea$atmp
mean(as.numeric(rstemsea$atmp_mb), na.rm=T)
unique(rstemsea$atmp_mb)
rstemsea$soil_temp     = 25
rstemsea$collar_diam   = 12
rstemsea$atmp          = 1000
rstemsea$codew   <- paste(rstemsea$plot_code, rstemsea$sub_plot, rstemsea$tree_tag, rstemsea$day, rstemsea$month, rstemsea$year, sep=".")
# get unique identifyer for each measurement
uid <- unique(rstemsea$codew)
xx <- c()
yy <- c()
zz <- c()
#for (i in uid) {
for (i in 1:length(uid)) {
sub      <- subset(rstemsea, subset=(rstemsea$codew == uid[i]))
id       <- tail(sub$codew, n=1)
co2slope <- sub$slope
P        <- tail(sub$atmp, n=1)                                                  # ambient pressure at t10 (mb)
Ta       <- tail(sub$soil_temp, n=1)                                             # air temp at t10 (deg C)
Vd       <- 0.0012287                                                            # m3 (constant)
A        <- 0.00950                                                              # m2 (constant)
ch       <- 5
Va       <- A*(ch/100)                                                           # additional volume m3
Ru       <- 8.31432                                                              # J mol-1 K-1 (constant)
fl       <- co2slope * (P/(Ta + 273.15))*(Vd/A)*((44.01*0.36)/Ru)                # CO2 efflux (g CO2 m-2 h-1)
fl2      <- (fl*A/Vd*(Va+Vd)/A)*6.312                                            # Convert to umol m-2 s-1. Correct for collar height.
tempcorr <- exp(-0.0695*(1))                                                     # add a temperature correction from Sotta et al 2004 Q10=1.8 and k=0.0613
convert  <- (2592000*10000*12)/(1000000*1000000)                                 # Convert units umol m2 s-1 to MgC ha month = 1mo=2592000sec, 10000m2=1ha, 1000000umol = 1 mol, 1mol = 12 g, 1000000g=1Mg
flux     <- fl2*convert*tempcorr
xx       <- rbind(xx, id)
yy       <- rbind(yy, flux)
print(yy)
}
Res <- data.frame(cbind(xx, yy), row.names=NULL)
colnames(Res) <- c("codew", "flux_MgC_ha_mo")
head(Res)
tail(Res)
max(Res$flux_MgC_ha_mo)
max(Res$flux_MgC_ha_mo, na.rm=T)
max(Res$flux_MgC_ha_mo, rm.na=T)
max(as.numeric(as.character(Res$flux_MgC_ha_mo)), rm.na=T)
max(as.numeric(as.character(Res$flux_MgC_ha_mo)), na.rm=T)
mean(as.numeric(as.character(Res$flux_MgC_ha_mo)), na.rm=T)
Res$plot_code     = str_split_fixed(Res$codew, "_", 6)[,1]
Res$sub_plot      = str_split_fixed(Res$codew, "_", 6)[,2]
Res$tree_tag      = str_split_fixed(Res$codew, "_", 6)[,3]
Res$day           = str_split_fixed(Res$codew, "_", 6)[,4]
Res$month         = str_split_fixed(Res$codew, "_", 6)[,5]
Res$year          = str_split_fixed(Res$codew, "_", 6)[,6]
Res$date          = as.Date(paste(Res$year, Res$Month, Res$Day, sep="."), format="%Y.%m.%d")
head(Res)
Res$plot_code     = str_split_fixed(Res$codew, ".", 6)[,1]
Res$sub_plot      = str_split_fixed(Res$codew, ".", 6)[,2]
Res$tree_tag      = str_split_fixed(Res$codew, ".", 6)[,3]
Res$day           = str_split_fixed(Res$codew, ".", 6)[,4]
Res$month         = str_split_fixed(Res$codew, ".", 6)[,5]
Res$year          = str_split_fixed(Res$codew, ".", 6)[,6]
Res$date          = as.Date(paste(Res$year, Res$Month, Res$Day, sep="."), format="%Y.%m.%d")
head(Res)
Res$plot_code     = str_split_fixed(Res$codew, ".", 6)[,1]
Res$sub_plot      = str_split_fixed(Res$codew, ".", 6)[,2]
Res$tree_tag      = str_split_fixed(Res$codew, ".", 6)[,3]
Res$day           = str_split_fixed(Res$codew, ".", 6)[,4]
Res$month         = str_split_fixed(Res$codew, ".", 6)[,5]
Res$year          = str_split_fixed(Res$codew, ".", 6)[,6]
Res$date          = as.Date(paste(Res$year, Res$month, Res$day, sep="."), format="%Y.%m.%d")
head(res)
head(Res)
stem_resp <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/stem respiration/stem_resp_26April.csv", sep=",", header=T)
stem_resp <- subset(stem_resp, select=c(1:20))
temp = (subset(stem_resp, plot_code %in% c("SAF-01", "SAF-02", "SAF-03", "SAF-04", "SAF-05", "DAN-04", "DAN-05", "MLA-01", "MLA-02")))
rstemsea  = (subset(temp, quality_code == 1))
rstemsea$slope = as.numeric(as.character(rstemsea$InputF))
#################### calculate flux in MgC ha-1 month-1 : we need to re-do this using the correct weather data
rstemsea$soil_temp     = 25
rstemsea$collar_diam   = 12
rstemsea$atmp          = 1000
rstemsea$codew   <- paste(rstemsea$plot_code, rstemsea$sub_plot, rstemsea$tree_tag, rstemsea$day, rstemsea$month, rstemsea$year, sep=".")
# get unique identifyer for each measurement
uid <- unique(rstemsea$codew)
xx <- c()
yy <- c()
zz <- c()
#for (i in uid) {
for (i in 1:length(uid)) {
sub      <- subset(rstemsea, subset=(rstemsea$codew == uid[i]))
id       <- tail(sub$codew, n=1)
co2slope <- sub$slope
P        <- tail(sub$atmp, n=1)                                                  # ambient pressure at t10 (mb)
Ta       <- tail(sub$soil_temp, n=1)                                             # air temp at t10 (deg C)
Vd       <- 0.0012287                                                            # m3 (constant)
A        <- 0.00950                                                              # m2 (constant)
ch       <- 5
Va       <- A*(ch/100)                                                           # additional volume m3
Ru       <- 8.31432                                                              # J mol-1 K-1 (constant)
fl       <- co2slope * (P/(Ta + 273.15))*(Vd/A)*((44.01*0.36)/Ru)                # CO2 efflux (g CO2 m-2 h-1)
fl2      <- (fl*A/Vd*(Va+Vd)/A)*6.312                                            # Convert to umol m-2 s-1. Correct for collar height.
tempcorr <- exp(-0.0695*(1))                                                     # add a temperature correction from Sotta et al 2004 Q10=1.8 and k=0.0613
convert  <- (2592000*10000*12)/(1000000*1000000)                                 # Convert units umol m2 s-1 to MgC ha month = 1mo=2592000sec, 10000m2=1ha, 1000000umol = 1 mol, 1mol = 12 g, 1000000g=1Mg
flux     <- fl2*convert*tempcorr
xx       <- rbind(xx, id)
yy       <- rbind(yy, flux)
print(yy)
}
Res <- data.frame(cbind(xx, yy), row.names=NULL)
colnames(Res) <- c("codew", "flux_MgC_ha_mo")
rr <- Res
rr$test = str_split_fixed(rr$codew, ".", 6)[,1]
head(rr)
head(Res)
str(Res)
rr <- Res
head(rr)
rr$codew1 <- as.character(rr$codew)
str(rr)
rr$test = str_split_fixed(rr$codew1, ".", 6)[,1]
head(rr)
rr$test2 = str_split_fixed(rr$codew1, ".", 6)[,2]
head(rr)
Rstem_sea <- merge(rstemsea, Res)
head(Rstem_sea)
Rstem_sea <- merge(Res, rstemsea, all.x=T)
Rstemsea <- merge(Res, rstemsea, all.x=T)
length(Res$codew)
length(Rstemsea$codew)
rstemsea <- merge(Res, rstemsea, all.x=T)
write.csv(rstemsea, file="ts_rstem_may17_sea.csv")
rstemsea$date <- strptime(paste(as.character(rstemsea$year), as.character(rstemsea$month), as.character(rstemsea$day), sep="-"), format="%Y-%m-%d")
write.csv(rstemsea, file="ts_rstem_may17_sea.csv")
setwd("~/Github/gemcarbon_data/processed_ts_2017/ts_stem_respiration")
write.csv(rstemsea, file="ts_rstem_may17_sea.csv")
seamin <- min(saf01$date, na.rm=T)
seamax <- max(saf01$date, na.rm=T)
seamin <- min(rstemsea$date, na.rm=T)
seamax <- max(rstemsea$date, na.rm=T)
plot_rs_sea <- ggplot(rstemsea, aes(date, rstem_ppm_m2_sec, colour = factor(rstemsea$plot_code))) +
geom_point() +
#geom_point(data = avg_rs_sea, aes(avg_rs_sea$date, avg_rs_sea$plotavg_MgC_ha_month, colour = factor(avg_rs_sea$plot_code))) +
#geom_errorbar(data = avg_rs_sea, aes(x=date, y=plotavg_MgC_ha_month, ymin=(plotavg_MgC_ha_month-plotavg_MgC_ha_month_sd), ymax=(plotavg_MgC_ha_month+plotavg_MgC_ha_month_sd)), width = 0.5) +
#geom_line(data = avg_rs_sea, aes(date, plotavg_MgC_ha_month, colour = factor(avg_rs_sea$plot_code))) +
#scale_colour_manual(values=rep(brewer.pal(12,"Paired"))) +
theme(legend.position = "bottom") +
xlab("") + ylab(expression(paste("Stem respiration per collar (MgC ",ha^-1, month^-1, ")", sep=""))) +
#xlim(seamin, seamax) + ylim(0, 5) +
ggtitle("South East Asia")
plot_rs_sea
plot_rs_sea <- ggplot(rstemsea, aes(date, flux_MgC_ha_mo, colour = factor(rstemsea$plot_code))) +
geom_point() +
#geom_point(data = avg_rs_sea, aes(avg_rs_sea$date, avg_rs_sea$plotavg_MgC_ha_month, colour = factor(avg_rs_sea$plot_code))) +
#geom_errorbar(data = avg_rs_sea, aes(x=date, y=plotavg_MgC_ha_month, ymin=(plotavg_MgC_ha_month-plotavg_MgC_ha_month_sd), ymax=(plotavg_MgC_ha_month+plotavg_MgC_ha_month_sd)), width = 0.5) +
#geom_line(data = avg_rs_sea, aes(date, plotavg_MgC_ha_month, colour = factor(avg_rs_sea$plot_code))) +
#scale_colour_manual(values=rep(brewer.pal(12,"Paired"))) +
theme(legend.position = "bottom") +
xlab("") + ylab(expression(paste("Stem respiration per collar (MgC ",ha^-1, month^-1, ")", sep=""))) +
#xlim(seamin, seamax) + ylim(0, 5) +
ggtitle("South East Asia")
plot_rs_sea
minx <- min(Res$flux_MgC_ha_mo, rm.na=T)
maxx <- max(Res$flux_MgC_ha_mo, rm.na=T)
minx <- min(rstemsea$flux_MgC_ha_mo, rm.na=T)
maxx <- max(rstemsea$flux_MgC_ha_mo, rm.na=T)
str()
str(rstemsea)
Res$flux_MgC_ha_mo <- as.numeric(as.character(Res$flux_MgC_ha_mo))
rstemsea <- merge(Res, rstemsea, all.x=T)
rstemsea$date <- strptime(paste(as.character(rstemsea$year), as.character(rstemsea$month), as.character(rstemsea$day), sep="-"), format="%Y-%m-%d")
setwd("~/Github/gemcarbon_data/processed_ts_2017/ts_stem_respiration")
write.csv(rstemsea, file="ts_rstem_may17_sea.csv")
seamin <- min(rstemsea$date, na.rm=T)
seamax <- max(rstemsea$date, na.rm=T)
plot_rs_sea <- ggplot(rstemsea, aes(date, flux_MgC_ha_mo, colour = factor(rstemsea$plot_code))) +
geom_point() +
#geom_point(data = avg_rs_sea, aes(avg_rs_sea$date, avg_rs_sea$plotavg_MgC_ha_month, colour = factor(avg_rs_sea$plot_code))) +
#geom_errorbar(data = avg_rs_sea, aes(x=date, y=plotavg_MgC_ha_month, ymin=(plotavg_MgC_ha_month-plotavg_MgC_ha_month_sd), ymax=(plotavg_MgC_ha_month+plotavg_MgC_ha_month_sd)), width = 0.5) +
#geom_line(data = avg_rs_sea, aes(date, plotavg_MgC_ha_month, colour = factor(avg_rs_sea$plot_code))) +
#scale_colour_manual(values=rep(brewer.pal(12,"Paired"))) +
theme(legend.position = "bottom") +
xlab("") + ylab(expression(paste("Stem respiration per collar (MgC ",ha^-1, month^-1, ")", sep=""))) +
#xlim(seamin, seamax) + ylim(0, 5) +
ggtitle("South East Asia")
plot_rs_sea
plot_rs_sea <- ggplot(rstemsea, aes(date, flux_MgC_ha_mo, colour = factor(rstemsea$plot_code))) +
geom_point() +
#geom_point(data = avg_rs_sea, aes(avg_rs_sea$date, avg_rs_sea$plotavg_MgC_ha_month, colour = factor(avg_rs_sea$plot_code))) +
#geom_errorbar(data = avg_rs_sea, aes(x=date, y=plotavg_MgC_ha_month, ymin=(plotavg_MgC_ha_month-plotavg_MgC_ha_month_sd), ymax=(plotavg_MgC_ha_month+plotavg_MgC_ha_month_sd)), width = 0.5) +
#geom_line(data = avg_rs_sea, aes(date, plotavg_MgC_ha_month, colour = factor(avg_rs_sea$plot_code))) +
#scale_colour_manual(values=rep(brewer.pal(12,"Paired"))) +
theme(legend.position = "bottom") +
xlab("") + ylab(expression(paste("Stem respiration per collar (MgC ",ha^-1, month^-1, ")", sep=""))) +
ylim((-1), 10) + #
ggtitle("South East Asia")
plot_rs_sea
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/NPProot_2015.R")
rawic1 <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/ic_all_11April_CG.csv", sep=",", header=T)
# clean NA
rawic1[rawic1 == 'NA'] <- NA
# remove stock measurements
w = which(rawic1$is_stock == "y")
rawic = rawic1[-w,]
# re-name plots
rawic$plot_code <- revalue(rawic$plot_code, c("TRU-4" = "TRU-04", "DC1" = "DAN-04", "DC2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "OP" = "OP"))
# fill in missing time_step values
# w = which(is.na(rawic$time_step) & !is.na(rawic$time_step_minutes))
# rawic$time_step[w] = (rawic$time_step_minutes[w]/10)
# length(rawic$time_step[w])
# get rid of duplicated rows
#data_ic1 <- rawic2[!duplicated(rawic2),] # OR data_ic <- unique(rawic2[ , 1:3]))
datafile <- rawic
plotname <- "ALP-12"
logmodel = T
fine_root_cor = "Default"
tubed = 0.07
remove_stock_meas = T
ret = "monthly.means.ts"
ret_type = c("list", "concat")
datafile = set_df_coltypes(datafile, ic_column_types)
ts_ic_2017_sa <- NPProot_ic(subset(datafile, plot_code %in% c("TAM-05", "ESP-01", "WAY-01", "ACJ-01", "TRU-4", "PAN-02", "PAN-03", "KEN-01", "KEN-02", "SPD-01", "SPD-02", "TAM-05", "TAM-06", "TAM-09", "BLZ-11", "BLZ-12", "BLZ-21", "BLZ-22"), ret_type = "list"))
ts_ic_2017_sea <- NPProot_ic(subset(datafile, plot_code %in% c("DAN-04", "DAN-05"), ret_type = "list", tx = "txc"))
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/NPProot_2015.R")
rawic1 <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/ic_all_11April_CG.csv", sep=",", header=T)
rawic1[rawic1 == 'NA'] <- NA
# remove stock measurements
w = which(rawic1$is_stock == "y")
rawic = rawic1[-w,]
# re-name plots
rawic$plot_code <- revalue(rawic$plot_code, c("TRU-4" = "TRU-04", "DC1" = "DAN-04", "DC2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "OP" = "OP"))
datafile = set_df_coltypes(datafile, ic_column_types)
datafile <- rawic
datafile = set_df_coltypes(datafile, ic_column_types)
ts_ic_2017_sa <- NPProot_ic(subset(datafile, plot_code %in% c("TAM-05", "ESP-01", "WAY-01", "ACJ-01", "TRU-4", "PAN-02", "PAN-03", "KEN-01", "KEN-02", "SPD-01", "SPD-02", "TAM-05", "TAM-06", "TAM-09", "BLZ-11", "BLZ-12", "BLZ-21", "BLZ-22"), ret_type = "list"))
ts_ic_2017_sea <- NPProot_ic(subset(datafile, plot_code %in% c("DAN-04", "DAN-05"), ret_type = "list", tx = "txc"))
head(datafile)
ts_ic_2017_test <- NPProot_ic(subset(datafile, plot_code %in% c("BLZ-11"), ret_type = "list", tx="txa"))
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/NPProot_2015.R")
rawic1 <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/ic_all_11April_CG.csv", sep=",", header=T)
# clean NA
rawic1[rawic1 == 'NA'] <- NA
# remove stock measurements
w = which(rawic1$is_stock == "y")
rawic = rawic1[-w,]
# re-name plots
rawic$plot_code <- revalue(rawic$plot_code, c("TRU-4" = "TRU-04", "DC1" = "DAN-04", "DC2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "OP" = "OP"))
datafile <- rawic
plotname <- "DAN-02"
logmodel = T
fine_root_cor = "Default"
tubed = 0.07
remove_stock_meas = T
ret = "monthly.means.ts"
ret_type = "list"
datafile = set_df_coltypes(datafile, ic_column_types)
mean_exponents = c("Default" = 0.22,
"ACJ-01" = 0.22)
solve_for_a <- function(cum, tx, b) {
# Fit the curve through the final
#   point (x,y = tx, cum) with a site-mean exponent (b, perhaps per size-class), solving for linear slope (a).
#   For example, cum1 ~ a * tx^b.  Thus, a = cum1/tx^b.
a = cum[length(cum)]/tx[length(tx)]^b
}
extrapolate_failed_model <- function(cum, tx, b, mins = 100) {
a = solve_for_a(cum, tx, b)
cum_tot = a * mins^b
return(cum_tot)
}
# subset core data before passing in.  E.g. sub <- subset(data, subset=(data$this_core == uid[i]))
this_exponent = ifelse(plotname %in% names(mean_exponents), mean_exponents[plotname], mean_exponents["Default"])
coef_func = ifelse(logmodel, coef, coefficients) # nls & lm have different methods for extracting coefs.  use this when testing exponent > 1
# define cumulative time steps
tx = switch(tx, txa = c(10,20,30,40),
txb = c(5,10,15),
txc = c(5,10,15,20))
if  (!any(is.na(core_data[,root_type])) & sum(core_data[,root_type]) > 0) {
cumdata      <- tail(core_data[,root_type], n=length(tx)) # cumulative values for that diameter class
cum          <- cumsum(cumdata)
if(cum[1] == 0) {                       # make sure we find some roots in first sample.  Otherwise, log models blow up.
tot_roots = extrapolate_failed_model(cum, tx, this_exponent, mins = mins)
} else {
if(logmodel) {
P_log <- lm(log(cum) ~ log(tx))
tot_roots <- exp(coefficients(P_log)[1]) * (100)^(coefficients(P_log)[2])  # We use the same method as Khoon & Terhi (120 mins and log-curve as default).
} else {
P <- nls(cum ~ a * tx^b, start=list(a=1, b=1), control = nls.control(maxiter=1000, warnOnly=T))
tot_roots <- coef(P)[1] * (100)^(coef(P)[2])  # Chris used 100 mins and power law, but here we use 120 min (Khoon & Terhi).
}
if(coef_func(P_log)[2] > 1) {         # make sure accumulation of roots is declining with time
tot_roots = extrapolate_failed_model(cum, tx, this_exponent, mins = 100)
}
}
} else {
tot_roots <- NA
}
return(tot_roots)
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/NPProot_2015.R")
rawic1 <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/ic_all_11April_CG.csv", sep=",", header=T)
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/flf_2016.R")
data_flf <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/flf_all_4April.csv", sep=",", header=T)
tam  <- subset(data_flf, plot_code %in% c("TAM-05", "TAM-06", "TAM-09"))
head(tam)
unique(tam$year)
tamplt <- ggplot(tam, aes(year, leaves_g_per_trap, colour = factor(tam$plot_code))) +
geom_point()
tamplt
tam06  <- subset(data_flf, plot_code %in% c("TAM-06"))
library(zoo)
library(sqldf)
require(ggplot2)
library(dplyr)
library(plyr)
flf_column_types = c(
"plot_code" = "character",
"year" = "integer",
"month" = "integer",
"day" = "integer",
"litterfall_trap_num" = "Factor",
"litterfall_trap_size_m2" = "numeric",
"leaves_g_per_trap" = "numeric",
"twigs_g_per_trap" = "numeric",
"flowers_g_per_trap" = "numeric",
"fruits_g_per_trap" = "numeric",
"seeds_g_per_trap" = "numeric",
"bromeliads_g_per_trap" = "numeric",
"epiphytes_g_per_trap" = "numeric",
"other_g_per_trap" = "numeric",
"palm_leaves_g_per_trap" = "numeric",
"palm_flower_g_per_trap" = "numeric",
"palm_fruit_g_per_trap" = "numeric",
"total_litter_g_per_trap" = "numeric",
"quality_code" = "factor",
"comments" = "character"
)
if (class(data_flf) != "data.frame") { # if it's not a dataframe, assume it's a path+filename
data_flf <- read.csv(data_flf)
}
ret_type = match.arg(ret_type)
plotname <- "TAM-06"
pb = txtProgressBar(max = length(unique(data_flf$plot_code)), style = 3); i = 0
output = list()
first_run = T
for (thisplot in unique(data_flf$plot_code)) {
output[[thisplot]] = flf_oneplot(data_flf, thisplot, ...)
if (first_run) {
first_run = F
output_concat = output[[thisplot]]
} else {
output_concat = rbind(output_concat, output[[thisplot]])
}
i = i + 1
setTxtProgressBar(pb, i)
}
close(pb)
if (class(data_flf) != "data.frame") { # if it's not a dataframe, assume it's a path+filename
data_flf <- read.csv(data_flf)
}
data_flf$fruits_g_per_trap = as.numeric(data_flf$fruits_g_per_trap)
data_flf$seeds_g_per_trap = as.numeric(as.character(data_flf$seeds_g_per_trap))
data_flf$day = as.integer(as.character(data_flf$day))
# SEA RHET
soil_resp_sea  <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/soil respiration/SAFE_SoilRespiration_Data_toCecile3.csv", sep=",", header=T, fill = TRUE)
Res <- subset(soil_resp_sea, soil_resp_sea$Quality == 1 & soil_resp_sea$Collar_type == "C3")
Res$plot_code <- Res$Plot
Res$plot_code <- revalue(Res$plot_code, c("Tower" = "SAF-05","E" = "SAF-03","B South" = "SAF-01","B North" = "SAF-02","Belian" =  "MLA-01","Seraya" = "MLA-02","LF" = "SAF-04","DC1" = "DAN-04","DC2" = "DAN-05"))
Res$date <- as.Date(paste(Res$year, Res$month, Res$day, sep="."), format="%Y.%m.%d")
Res$Flux_Mg_C_ha_month <- as.numeric(as.character(Res$Flux_MgC_ha_month))
aa = subset(Res, plot_code %in% c("SAF-01", "SAF-02", "SAF-03", "SAF-04", "SAF-05"))
bb = subset(Res, plot_code %in% c("MLA-01", "MLA-02"))
cc = subset(Res, plot_code %in% c("DAN-04", "DAN-05"))
dd = subset(Res, plot_code=="OP")
xmin = min(aa$date, na.rm=T)
xmax = max(aa$date, na.rm=T)
paa <- ggplot(aa, aes(x = date, y = Flux_Mg_C_ha_month, colour = factor(aa$plot_code), na.rm = T)) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(6,"Paired"))) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab(expression(paste("Heterotrophic Rsoil (MgC ",ha^-1,mo^-1, ")", sep=""))) +
ylim(0, 3)
pbb <- ggplot(bb, aes(x = date, y = Flux_Mg_C_ha_month, colour = factor(bb$plot_code), na.rm = T)) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(6,"Paired"))) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab(expression(paste("Heterotrophic Rsoil (MgC ",ha^-1,mo^-1, ")", sep=""))) +
ylim(0, 3) + xlim(xmin, xmax)
pcc <- ggplot(cc, aes(x = date, y = Flux_Mg_C_ha_month, colour = factor(cc$plot_code), na.rm = T)) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(6,"Paired"))) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab(expression(paste("Heterotrophic Rsoil (MgC ",ha^-1,mo^-1, ")", sep=""))) +
ylim(0, 3) + xlim(xmin, xmax)
fig3 <- grid.arrange(paa, pbb, pcc, ncol=1, nrow=3)
fig3
setwd("~/Github/gemcarbon_data/processed_ts_2017/ts_soil_respiration")
write.csv(Res, file="ts_rhet_sea_may17.csv")
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/flf_2016.R")
data_flf <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/flf_all_4April.csv", sep=",", header=T)
tam06  <- subset(data_flf, plot_code %in% c("TAM-06"))
tamplt <- ggplot(tam06, aes(year, leaves_g_per_trap, colour = factor(tam$plot_code))) +
geom_point()
tamplt
head(tam06)
tamplt <- ggplot(tam06, aes(year, leaves_g_per_trap, colour = factor(tam06$plot_code))) +
geom_point()
tamplt
plotname <- "TAM-06"
library(zoo)
library(sqldf)
library(dplyr)
library(plyr)
library(grDevices)
library(RColorBrewer)
require(ggplot2)
require(gridExtra)
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/soilrespiration_auxfunctions.r")
raw_consrA   <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/soil respiration/eltr_rsoil_control_mar17.csv", sep=",", header=T)
raw_parsrA   <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/soil respiration/eltr_rsoil_part_mar17.csv", sep=",", header=T)
raw_totsrA   <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/soil respiration/eltr_rsoil_total_mar17.csv", sep=",", header=T)
weather      <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/soil respiration/eltr_rsoil_weather_mar17.csv", sep=",", header=T)
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/NPProot_2015.R")
rawic1 <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/ic_all_11April_CG.csv", sep=",", header=T)
# clean NA
rawic1[rawic1 == 'NA'] <- NA
# re-name plots
rawic$plot_code <- revalue(rawic$plot_code, c("TRU-4" = "TRU-04", "DC1" = "DAN-04", "DC2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "OP" = "OP"))
unique(rawic$plot_code)
unique(rawic1$plot_code)
rawic1$plot_code <- revalue(rawic$plot_code, c("TRU-4" = "TRU-04", "DC1" = "DAN-04", "DC2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "OP" = "OP"))
rawic1$plot_code <- revalue(rawic1$plot_code, c("TRU-4" = "TRU-04", "DC1" = "DAN-04", "DC2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "OP" = "OP"))
head(rawic1)
