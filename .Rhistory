"litterfall_trap_size_m2" = "numeric",
"leaves_g_per_trap" = "numeric",
"twigs_g_per_trap" = "numeric",
"flowers_g_per_trap" = "numeric",
"fruits_g_per_trap" = "numeric",
"seeds_g_per_trap" = "numeric",
"bromeliads_g_per_trap" = "numeric",
"epiphytes_g_per_trap" = "numeric",
"other_g_per_trap" = "numeric",
"palm_leaves_g_per_trap" = "numeric",
"palm_flower_g_per_trap" = "numeric",
"palm_fruit_g_per_trap" = "numeric",
"total_litter_g_per_trap" = "numeric",
"quality_code" = "factor",
"comments" = "character"
)
if (class(data_flf) != "data.frame") { # if it's not a dataframe, assume it's a path+filename
data_flf <- read.csv(data_flf)
}
ret_type = match.arg(ret_type)
plotname <- "TAM-06"
pb = txtProgressBar(max = length(unique(data_flf$plot_code)), style = 3); i = 0
output = list()
first_run = T
for (thisplot in unique(data_flf$plot_code)) {
output[[thisplot]] = flf_oneplot(data_flf, thisplot, ...)
if (first_run) {
first_run = F
output_concat = output[[thisplot]]
} else {
output_concat = rbind(output_concat, output[[thisplot]])
}
i = i + 1
setTxtProgressBar(pb, i)
}
close(pb)
if (class(data_flf) != "data.frame") { # if it's not a dataframe, assume it's a path+filename
data_flf <- read.csv(data_flf)
}
data_flf$fruits_g_per_trap = as.numeric(data_flf$fruits_g_per_trap)
data_flf$seeds_g_per_trap = as.numeric(as.character(data_flf$seeds_g_per_trap))
data_flf$day = as.integer(as.character(data_flf$day))
# SEA RHET
soil_resp_sea  <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/soil respiration/SAFE_SoilRespiration_Data_toCecile3.csv", sep=",", header=T, fill = TRUE)
Res <- subset(soil_resp_sea, soil_resp_sea$Quality == 1 & soil_resp_sea$Collar_type == "C3")
Res$plot_code <- Res$Plot
Res$plot_code <- revalue(Res$plot_code, c("Tower" = "SAF-05","E" = "SAF-03","B South" = "SAF-01","B North" = "SAF-02","Belian" =  "MLA-01","Seraya" = "MLA-02","LF" = "SAF-04","DC1" = "DAN-04","DC2" = "DAN-05"))
Res$date <- as.Date(paste(Res$year, Res$month, Res$day, sep="."), format="%Y.%m.%d")
Res$Flux_Mg_C_ha_month <- as.numeric(as.character(Res$Flux_MgC_ha_month))
aa = subset(Res, plot_code %in% c("SAF-01", "SAF-02", "SAF-03", "SAF-04", "SAF-05"))
bb = subset(Res, plot_code %in% c("MLA-01", "MLA-02"))
cc = subset(Res, plot_code %in% c("DAN-04", "DAN-05"))
dd = subset(Res, plot_code=="OP")
xmin = min(aa$date, na.rm=T)
xmax = max(aa$date, na.rm=T)
paa <- ggplot(aa, aes(x = date, y = Flux_Mg_C_ha_month, colour = factor(aa$plot_code), na.rm = T)) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(6,"Paired"))) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab(expression(paste("Heterotrophic Rsoil (MgC ",ha^-1,mo^-1, ")", sep=""))) +
ylim(0, 3)
pbb <- ggplot(bb, aes(x = date, y = Flux_Mg_C_ha_month, colour = factor(bb$plot_code), na.rm = T)) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(6,"Paired"))) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab(expression(paste("Heterotrophic Rsoil (MgC ",ha^-1,mo^-1, ")", sep=""))) +
ylim(0, 3) + xlim(xmin, xmax)
pcc <- ggplot(cc, aes(x = date, y = Flux_Mg_C_ha_month, colour = factor(cc$plot_code), na.rm = T)) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(6,"Paired"))) +
theme(legend.position = "bottom") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
xlab("") + ylab(expression(paste("Heterotrophic Rsoil (MgC ",ha^-1,mo^-1, ")", sep=""))) +
ylim(0, 3) + xlim(xmin, xmax)
fig3 <- grid.arrange(paa, pbb, pcc, ncol=1, nrow=3)
fig3
setwd("~/Github/gemcarbon_data/processed_ts_2017/ts_soil_respiration")
write.csv(Res, file="ts_rhet_sea_may17.csv")
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/flf_2016.R")
data_flf <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/flf_all_4April.csv", sep=",", header=T)
tam06  <- subset(data_flf, plot_code %in% c("TAM-06"))
tamplt <- ggplot(tam06, aes(year, leaves_g_per_trap, colour = factor(tam$plot_code))) +
geom_point()
tamplt
head(tam06)
tamplt <- ggplot(tam06, aes(year, leaves_g_per_trap, colour = factor(tam06$plot_code))) +
geom_point()
tamplt
plotname <- "TAM-06"
library(zoo)
library(sqldf)
library(dplyr)
library(plyr)
library(grDevices)
library(RColorBrewer)
require(ggplot2)
require(gridExtra)
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/soilrespiration_auxfunctions.r")
raw_consrA   <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/soil respiration/eltr_rsoil_control_mar17.csv", sep=",", header=T)
raw_parsrA   <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/soil respiration/eltr_rsoil_part_mar17.csv", sep=",", header=T)
raw_totsrA   <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/soil respiration/eltr_rsoil_total_mar17.csv", sep=",", header=T)
weather      <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/soil respiration/eltr_rsoil_weather_mar17.csv", sep=",", header=T)
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/NPProot_2015.R")
rawic1 <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/ic_all_11April_CG.csv", sep=",", header=T)
# clean NA
rawic1[rawic1 == 'NA'] <- NA
# re-name plots
rawic$plot_code <- revalue(rawic$plot_code, c("TRU-4" = "TRU-04", "DC1" = "DAN-04", "DC2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "OP" = "OP"))
unique(rawic$plot_code)
unique(rawic1$plot_code)
rawic1$plot_code <- revalue(rawic$plot_code, c("TRU-4" = "TRU-04", "DC1" = "DAN-04", "DC2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "OP" = "OP"))
rawic1$plot_code <- revalue(rawic1$plot_code, c("TRU-4" = "TRU-04", "DC1" = "DAN-04", "DC2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "OP" = "OP"))
head(rawic1)
library(zoo)
library(sqldf)
library(dplyr)
library(plyr)
library(grDevices)
library(RColorBrewer)
require(ggplot2)
require(gridExtra)
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/flf_2016.R")
data_flf <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/flf_all_4April.csv", sep=",", header=T)
ts_flf_2017_afr <- flf(subset(data_flf, plot_code %in% c("KOG-02", "KOG-03", "KOG-04", "KOG-05", "KOG-06", "BOB-01", "BOB-02", "BOB-03", "BOB-04", "BOB-05", "BOB-06", "ANK-01", "ANK-02", "ANK-03", "LPG-01", "LPG-02", "IVI-01", "IVI-02")), plotit = F) #, "MNG-03", "MNG-04"
ts_flf_2017_sea <- flf(subset(data_flf, plot_code %in% c("SAF-01", "SAF-02", "SAF-03", "SAF-04", "SAF-05", "MLA-01", "MLA-02", "DAN-04", "DAN-05")), plotit = F)
ts_flf_2017_sa  <- flf(subset(data_flf, plot_code %in% c("KEN-02", "SPD-02", "WAY-01", "ESP-01", "ALP-11", "ALP-12", "KEN-01", "SPD-01", "TAM-05", "TAM-06", "TAM-09", "ACJ-01", "PAN-02", "PAN-03", "TRU-04", "BLZ-11", "BLZ-12", "BLZ-21", "BLZ-22")), plotit = F)
ts_flf_2017_sa  <- flf(subset(data_flf, plot_code %in% c("KEN-02", "SPD-02", "WAY-01", "ESP-01", "ALP-11", "ALP-12", "KEN-01", "SPD-01", "TAM-05", "TAM-06", "TAM-09", "ACJ-01", "PAN-02", "PAN-03", "TRU-04", "BLZ-11", "BLZ-12", "BLZ-21", "BLZ-22")), plotit = F)
tam    <- subset(data_flf, plot_code %in% c("TAM-05", "TAM-06", "TAM-09"))
head(tam)
ts_flf_2017_tam  <- flf(subset(data_flf, plot_code %in% c("TAM-05", "TAM-06", "TAM-09")), plotit = F)
ts_flf_2017_tam  <- flf(subset(data_flf, plot_code %in% c("TAM-05")), plotit = F)
head(ts_flf_2017_tam)
ts_flf_2017_tam  <- flf(subset(data_flf, plot_code %in% c("TAM-06")), plotit = F)
head(ts_flf_2017_tam)
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/flf_2016.R")
data_flf <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/flf_all_4April.csv", sep=",", header=T)
ts_flf_2017_tam  <- flf(subset(data_flf, plot_code %in% c("TAM-06")), plotit = F)
head(ts_flf_2017_tam)
tam06  <- subset(data_flf, plot_code %in% c("TAM-06"))
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/flf_2016.R")
data_flf <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/flf_all_4April.csv", sep=",", header=T)
tam06  <- subset(data_flf, plot_code %in% c("TAM-06"))
library(zoo)
library(sqldf)
require(ggplot2)
library(dplyr)
library(plyr)
data_flf <- tam06
head(data_flf)
if (class(data_flf) != "data.frame") { # if it's not a dataframe, assume it's a path+filename
data_flf <- read.csv(data_flf)
}
ret_type = match.arg(ret_type)
pb = txtProgressBar(max = length(unique(data_flf$plot_code)), style = 3); i = 0
output = list()
first_run = T
for (thisplot in unique(data_flf$plot_code)) {
output[[thisplot]] = flf_oneplot(data_flf, thisplot, ...)
if (first_run) {
first_run = F
output_concat = output[[thisplot]]
} else {
output_concat = rbind(output_concat, output[[thisplot]])
}
i = i + 1
setTxtProgressBar(pb, i)
}
close(pb)
if (class(data_flf) != "data.frame") { # if it's not a dataframe, assume it's a path+filename
data_flf <- read.csv(data_flf)
}
data_flf$fruits_g_per_trap = as.numeric(data_flf$fruits_g_per_trap)
data_flf$seeds_g_per_trap = as.numeric(as.character(data_flf$seeds_g_per_trap))
data_flf$day = as.integer(as.character(data_flf$day))
data_flf2 <- c()
if (missing(plotname)) {  # calculate for first-mentioned plot if plot not specified.  rethink whether we should really have this here...
plotname = data_flf$plot_code[1]
}
plotname = data_flf$plot_code
plotname
data_flf2 = subset(data_flf, plot_code == plotname)
data_flf2 = data_flf2 %>% dplyr::rename(plot = plot_code,
num = litterfall_trap_num,
leaves = leaves_g_per_trap,
twigs = twigs_g_per_trap,
flowers = flowers_g_per_trap,
fruits = fruits_g_per_trap,
brom = bromeliads_g_per_trap,
epi = epiphytes_g_per_trap,
other = other_g_per_trap) %>%
dplyr::mutate(seeds = NA,
date = as.Date(paste(data_flf2$year, data_flf2$month, data_flf2$day, sep="."), format="%Y.%m.%d"))
x <- cbind(data_flf2$leaves, data_flf2$twigs, data_flf2$flowers, data_flf2$fruits, data_flf2$seeds, data_flf2$brom, data_flf2$epi, data_flf2$other)
data_flf2$total <- rowSums(x, na.rm = T)
total_only = data_flf2$total == 0 & ! is.na(data_flf2$total_litter_g_per_trap)
data_flf2[total_only,]$total = data_flf2[total_only,]$total_litter_g_per_trap
data_flf2$total[which(data_flf2$total>300)] <- NA   # remove outliers with totalf > 300
data_flf2$total[which(data_flf2$total<0)]   <- NA   # remove implausible totallf (negative litter)
data_flf2$codeb <- paste(data_flf2$plot, data_flf2$num, sep=".")
data_flf2$codew <- paste(data_flf2$plot, data_flf2$num, data_flf2$year, data_flf2$month, data_flf2$day, sep=".")
uid             <- unique(data_flf2$codeb)
xx              <- c()
yy              <- c()
aa              <- c()
bb              <- c()
cc              <- c()
dd              <- c()
ee              <- c()
ff              <- c()
gg              <- c()
hh              <- c()
for (i in 1:length(data_flf2$num)) {
sub       <- subset(data_flf2, subset=(data_flf2$codeb == uid[i]))
if(length(sub$codeb) > 1) {
meas_int      <- difftime(sub$date[1:(length(sub$date)-1)], sub$date[2:length(sub$date)], units="days")
meas_int_num  <- as.numeric(as.character(meas_int))
aleaves       <- tail(sub$leaves,-1)
atwigs        <- tail(sub$twigs,-1)
aflowers      <- tail(sub$flowers,-1)
afruits       <- tail(sub$fruits,-1)
abrom         <- tail(sub$brom,-1)
aepi          <- tail(sub$epi,-1)
aother        <- tail(sub$other,-1)
atotal        <- tail(sub$total,-1)
bleaves       <- aleaves/(-meas_int_num)
btwigs        <- atwigs/(-meas_int_num)
bflowers      <- aflowers/(-meas_int_num)
bfruits       <- afruits/(-meas_int_num)
bbrom         <- abrom/(-meas_int_num)
bepi          <- aepi/(-meas_int_num)
bother        <- aother/(-meas_int_num)
btotal        <- atotal/(-meas_int_num)
id            <- tail(sub$codew,-1)
xx            <- c(xx, id)
yy            <- c(yy, meas_int_num)
aa            <- c(aa, bleaves)
bb            <- c(bb, btwigs)
cc            <- c(cc, bflowers)
dd            <- c(dd, bfruits)
ee            <- c(ee, bbrom)
ff            <- c(ff, bepi)
gg            <- c(gg, bother)
hh            <- c(hh, btotal)
if (verbose) print(xx)
} else {
# print(paste("row number:", i))
# print(paste("trap number:", sub$num))
# print(paste("subset length:", length(sub$codeb)))
if(exists("error_df")) {
error_df <- rbind(error_df, data.frame(row = i, trap = sub$num[i], sub_len = length(sub$codeb)))
} else {
error_df <- data.frame(row = i, trap = sub$num[i], sub_len = length(sub$codeb))
}
}
}
error_df_g <<- error_df # assigning to global variable outside the function.
print(paste(nrow(error_df), "errors in the data.  See error_df_g."))
data2 <- data.frame(xx, yy, aa, bb, cc, dd, ee, ff, gg, hh)
colnames(data2) <- c("id", "meas_int_days", "bleavesflf_g_trap_day", "btwigs", "bflowers", "bfruits", "bbrom", "bepi", "bother", "btotal")
verbose = T
plotit=F
ret="monthly.means.ts"
data_flf2$codeb <- paste(data_flf2$plot, data_flf2$num, sep=".")
data_flf2$codew <- paste(data_flf2$plot, data_flf2$num, data_flf2$year, data_flf2$month, data_flf2$day, sep=".")
uid             <- unique(data_flf2$codeb)
xx              <- c()
yy              <- c()
aa              <- c()
bb              <- c()
cc              <- c()
dd              <- c()
ee              <- c()
ff              <- c()
gg              <- c()
hh              <- c()
for (i in 1:length(data_flf2$num)) {
sub       <- subset(data_flf2, subset=(data_flf2$codeb == uid[i]))
if(length(sub$codeb) > 1) {
meas_int      <- difftime(sub$date[1:(length(sub$date)-1)], sub$date[2:length(sub$date)], units="days")
meas_int_num  <- as.numeric(as.character(meas_int))
aleaves       <- tail(sub$leaves,-1)
atwigs        <- tail(sub$twigs,-1)
aflowers      <- tail(sub$flowers,-1)
afruits       <- tail(sub$fruits,-1)
abrom         <- tail(sub$brom,-1)
aepi          <- tail(sub$epi,-1)
aother        <- tail(sub$other,-1)
atotal        <- tail(sub$total,-1)
bleaves       <- aleaves/(-meas_int_num)
btwigs        <- atwigs/(-meas_int_num)
bflowers      <- aflowers/(-meas_int_num)
bfruits       <- afruits/(-meas_int_num)
bbrom         <- abrom/(-meas_int_num)
bepi          <- aepi/(-meas_int_num)
bother        <- aother/(-meas_int_num)
btotal        <- atotal/(-meas_int_num)
id            <- tail(sub$codew,-1)
xx            <- c(xx, id)
yy            <- c(yy, meas_int_num)
aa            <- c(aa, bleaves)
bb            <- c(bb, btwigs)
cc            <- c(cc, bflowers)
dd            <- c(dd, bfruits)
ee            <- c(ee, bbrom)
ff            <- c(ff, bepi)
gg            <- c(gg, bother)
hh            <- c(hh, btotal)
if (verbose) print(xx)
} #else {
# print(paste("row number:", i))
# print(paste("trap number:", sub$num))
# print(paste("subset length:", length(sub$codeb)))
#if(exists("error_df")) {
#  error_df <- rbind(error_df, data.frame(row = i, trap = sub$num[i], sub_len = length(sub$codeb)))
#} else {
#  error_df <- data.frame(row = i, trap = sub$num[i], sub_len = length(sub$codeb))
#}
#}
}
head(xx)
head(yy)
head(ff)
head(gg)
head(hh)
head(ee)
head(dd)
data2 <- data.frame(xx, yy, aa, bb, cc, dd, ee, ff, gg, hh)
colnames(data2) <- c("id", "meas_int_days", "bleavesflf_g_trap_day", "btwigs", "bflowers", "bfruits", "bbrom", "bepi", "bother", "btotal")
head(data2)
tail(data2)
unique(data2$btotal)
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/flf_2016.R")
data_flf <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/flf_all_4April.csv", sep=",", header=T)
ts_flf_2017_tam  <- flf(subset(data_flf, plot_code %in% c("TAM-05", "TAM-06", "TAM-09")), plotit = F)
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/flf_2016.R")
data_flf <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/flf_all_4April.csv", sep=",", header=T)
ts_flf_2017_tam  <- flf(subset(data_flf, plot_code %in% c("TAM-06")), plotit = F)
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/flf_2016.R")
data_flf <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/flf_all_4April.csv", sep=",", header=T)
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/flf_2016.R")
data_flf <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/flf_all_4April.csv", sep=",", header=T)
ts_flf_2017_tam  <- flf(subset(data_flf, plot_code %in% c("TAM-06")), plotit = F)
error_df_g
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/flf_2016.R")
data_flf <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/flf_all_4April.csv", sep=",", header=T)
ts_flf_2017_tam  <- flf(subset(data_flf, plot_code %in% c("TAM-06")), plotit = F)
tam06  <- subset(data_flf, plot_code %in% c("TAM-06"))
data_flf <- tam06
head(data_flf)
plotname = data_flf$plot_code[1]
plotname = data_flf$plot_code[1]
plotname
ret="monthly.means.ts"
plotit=F
verbose = T
if (class(data_flf) != "data.frame") { # if it's not a dataframe, assume it's a path+filename
data_flf <- read.csv(data_flf)
}
data_flf$fruits_g_per_trap = as.numeric(data_flf$fruits_g_per_trap)
data_flf$seeds_g_per_trap = as.numeric(as.character(data_flf$seeds_g_per_trap))
data_flf$day = as.integer(as.character(data_flf$day))
# new data frame
data_flf2 <- c()
data_flf2 = subset(data_flf, plot_code == plotname)
data_flf2 = data_flf2 %>% dplyr::rename(plot = plot_code,
num = litterfall_trap_num,
leaves = leaves_g_per_trap,
twigs = twigs_g_per_trap,
flowers = flowers_g_per_trap,
fruits = fruits_g_per_trap,
brom = bromeliads_g_per_trap,
epi = epiphytes_g_per_trap,
other = other_g_per_trap) %>%
dplyr::mutate(seeds = NA,
date = as.Date(paste(data_flf2$year, data_flf2$month, data_flf2$day, sep="."), format="%Y.%m.%d"))
# Calculate total litterfall (sum of branches, leaves, flowers, fruits, seeds, Broms, Epiphs, other...):
x <- cbind(data_flf2$leaves, data_flf2$twigs, data_flf2$flowers, data_flf2$fruits, data_flf2$seeds, data_flf2$brom, data_flf2$epi, data_flf2$other)
data_flf2$total <- rowSums(x, na.rm = T)
# In some cases, only total litterfall is recorded
total_only = data_flf2$total == 0 & ! is.na(data_flf2$total_litter_g_per_trap)
data_flf2[total_only,]$total = data_flf2[total_only,]$total_litter_g_per_trap
data_flf2$total[which(data_flf2$total>300)] <- NA   # remove outliers with totalf > 300
data_flf2$total[which(data_flf2$total<0)]   <- NA   # remove implausible totallf (negative litter)
data_flf2$codeb <- paste(data_flf2$plot, data_flf2$num, sep=".")
data_flf2$codew <- paste(data_flf2$plot, data_flf2$num, data_flf2$year, data_flf2$month, data_flf2$day, sep=".")
uid             <- unique(data_flf2$codeb)
xx              <- c()
yy              <- c()
aa              <- c()
bb              <- c()
cc              <- c()
dd              <- c()
ee              <- c()
ff              <- c()
gg              <- c()
hh              <- c()
for (i in 1:length(data_flf2$num)) {
sub       <- subset(data_flf2, subset=(data_flf2$codeb == uid[i]))
if(length(sub$codeb) > 1) {
meas_int      <- difftime(sub$date[1:(length(sub$date)-1)], sub$date[2:length(sub$date)], units="days")
meas_int_num  <- as.numeric(as.character(meas_int))
aleaves       <- tail(sub$leaves,-1)
atwigs        <- tail(sub$twigs,-1)
aflowers      <- tail(sub$flowers,-1)
afruits       <- tail(sub$fruits,-1)
abrom         <- tail(sub$brom,-1)
aepi          <- tail(sub$epi,-1)
aother        <- tail(sub$other,-1)
atotal        <- tail(sub$total,-1)
bleaves       <- aleaves/(-meas_int_num)
btwigs        <- atwigs/(-meas_int_num)
bflowers      <- aflowers/(-meas_int_num)
bfruits       <- afruits/(-meas_int_num)
bbrom         <- abrom/(-meas_int_num)
bepi          <- aepi/(-meas_int_num)
bother        <- aother/(-meas_int_num)
btotal        <- atotal/(-meas_int_num)
id            <- tail(sub$codew,-1)
xx            <- c(xx, id)
yy            <- c(yy, meas_int_num)
aa            <- c(aa, bleaves)
bb            <- c(bb, btwigs)
cc            <- c(cc, bflowers)
dd            <- c(dd, bfruits)
ee            <- c(ee, bbrom)
ff            <- c(ff, bepi)
gg            <- c(gg, bother)
hh            <- c(hh, btotal)
if (verbose) print(xx)
} #else {
# print(paste("row number:", i))
# print(paste("trap number:", sub$num))
# print(paste("subset length:", length(sub$codeb)))
#if(exists("error_df")) {
#  error_df <- rbind(error_df, data.frame(row = i, trap = sub$num[i], sub_len = length(sub$codeb)))
#} else {
#  error_df <- data.frame(row = i, trap = sub$num[i], sub_len = length(sub$codeb))
#}
#}
}
#error_df_g <<- error_df # assigning to global variable outside the function.
#print(paste(nrow(error_df), "errors in the data.  See error_df_g."))
data2 <- data.frame(xx, yy, aa, bb, cc, dd, ee, ff, gg, hh)
colnames(data2) <- c("id", "meas_int_days", "bleavesflf_g_trap_day", "btwigs", "bflowers", "bfruits", "bbrom", "bepi", "bother", "btotal")
head(data2)
tail(data2)
data_flf2$id <- data_flf2$codew
data3 <- merge(data_flf2, data2, by = "id")
data3$leavesflf_g_trap_day <- as.numeric(as.character(data3$bleavesflf_g_trap_day))
data3$meas_int_days        <- as.numeric(as.character(data3$meas_int_days))
data3$twigs                <- as.numeric(as.character(data3$btwigs))
data3$flowers              <- as.numeric(as.character(data3$bflowers))
data3$fruits               <- as.numeric(as.character(data3$bfruits))
data3$brom                 <- as.numeric(as.character(data3$bbrom))
data3$epi                  <- as.numeric(as.character(data3$bepi))
data3$other                <- as.numeric(as.character(data3$bother))
data3$total                <- as.numeric(as.character(data3$btotal))
### Conversions: flf per ha per day (for each trap)
# Raw data is in g / litter trap = g / 0.25m2
# Convert to ha: *(10000/0.25)
# Convert to Mg: *1 g = 0.000001 Mg
# Convert to C: *0.49
data3$leavesflf_MgC_ha_month  <- (((data3$leavesflf_g_trap_day*(10000/0.25))*0.000001)*0.49)*30 # TO DO: multiply by number of days in that month, not 30.
data3$twigsflf   <- (((data3$twigs*(10000/0.25))*0.000001)*0.49)*30
data3$flowersflf <- (((data3$flowers*(10000/0.25))*0.000001)*0.49)*30
data3$fruitsflf  <- (((data3$fruits*(10000/0.25))*0.000001)*0.49)*30
data3$bromflf    <- (((data3$brom*(10000/0.25))*0.000001)*0.49)*30
data3$epiflf     <- (((data3$epi*(10000/0.25))*0.000001)*0.49)*30
data3$otherflf   <- (((data3$other*(10000/0.25))*0.000001)*0.49)*30
data3$totalflf   <- (((data3$total*(10000/0.25))*0.000001)*0.49)*30
data4 = data3 %>% group_by(plot, num, year, month)
dplyr::summarize(leavesflf_MgC_ha_month_trap = mean(leavesflf_MgC_ha_month, na.rm = T),
twigsflf_MgC_ha_month_trap = mean(twigsflf, na.rm = T),
flowersflf_MgC_ha_month_trap = mean(flowersflf, na.rm = T),
fruitsflf_MgC_ha_month_trap = mean(fruitsflf, na.rm = T),
bromflf_MgC_ha_month_trap = mean(bromflf, na.rm = T),
epiflf_MgC_ha_month_trap = mean(epiflf, na.rm = T),
otherflf_MgC_ha_month_trap = mean(otherflf, na.rm = T),
totalflf_MgC_ha_month_trap = mean(totalflf, na.rm = T),
interval = - mean(meas_int_days, na.rm = T),
sd_leavesflf = sd(leavesflf_MgC_ha_month, na.rm = T),
sd_twigsflf = sd(twigsflf, na.rm = T),
sd_flowersflf = sd(flowersflf, na.rm = T),
sd_fruitsflf = sd(fruitsflf, na.rm = T),
sd_bromflf = sd(bromflf, na.rm = T),
sd_epiflf = sd(epiflf, na.rm = T),
sd_otherflf = sd(otherflf, na.rm = T),
sd_totalflf = sd(totalflf, na.rm = T)) %>%
dplyr::rename(litterfall_trap_num = num)
str(data3)
head(data3)
sessionInfo()
dplyr::summarize
leavesflf_MgC_ha_month_trap
ts_flf_2017_ken  <- flf(subset(data_flf, plot_code %in% c("KEN-02")), plotit = F)
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/flf_2016.R")
data_flf <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/flf_all_4April.csv", sep=",", header=T)
ts_flf_2017_ken  <- flf(subset(data_flf, plot_code %in% c("KEN-02")), plotit = F)
