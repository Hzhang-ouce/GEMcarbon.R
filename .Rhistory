head(rawic2)
rawic2
length(rawic2$plot_code)
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/NPProot_2015.R")
rawic1 <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/ic_all_11April_CG.csv", sep=",", header=T)
rawic1[rawic == 'NA'] <- NA
#rawic[rawic$is_stock == "y"] <- NA
w = which(rawic1$is_stock == "y")
rawic = rawic1[-w,]
rawic$plot_code <- revalue(rawic$plot_code, c("TRU-4" = "TRU-04", "DC1" = "DAN-04", "DC2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "OP" = "OP"))
datafile <- rawic
datafile = set_df_coltypes(datafile, ic_column_types)
ts_ic_2017_afr <- NPProot_ic(subset(datafile, plot_code %in% c("KOG-02", "KOG-03", "KOG-04", "KOG-05", "KOG-06", "LPG-01", "LPG-02", "ANK-01", "ANK-02", "ANK-03", "BOB-01", "BOB-02", "BOB-03", "BOB-04", "BOB-05", "BOB-06"), ret_type = "list"))
datafile <- rawic
datafile = set_df_coltypes(datafile, ic_column_types)
ts_ic_2017_afr <- NPProot_ic(subset(datafile, plot_code %in% c("KOG-02", "KOG-03", "KOG-04", "KOG-05", "KOG-06", "LPG-01", "LPG-02", "ANK-01", "ANK-02", "ANK-03", "BOB-01", "BOB-02", "BOB-03", "BOB-04", "BOB-05", "BOB-06"), ret_type = "list"))
ts_ic_2017_afr <- NPProot_ic(subset(datafile, plot_code %in% c("KOG-02", "KOG-03", "KOG-04", "KOG-05", "KOG-06"), ret_type = "list"))
datafile <- rawic
datafile = set_df_coltypes(datafile, ic_column_types)
ts_ic_2017_afr <- NPProot_ic(subset(datafile, plot_code %in% c("KOG-02", "KOG-03", "KOG-04", "KOG-05", "KOG-06"), ret_type = "list"))
ts_ic_2017_afr <- NPProot_ic(subset(datafile, plot_code %in% c("KOG-02", "KOG-03", "KOG-04", "KOG-05", "KOG-06"), ret_type = "list"))
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/NPProot_2015.R")
rawic1 <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/ic_all_11April_CG.csv", sep=",", header=T)
# clean NA
rawic1[rawic == 'NA'] <- NA
# remove stock measurements
w = which(rawic1$is_stock == "y")
rawic = rawic1[-w,]
# re-name plots
rawic$plot_code <- revalue(rawic$plot_code, c("TRU-4" = "TRU-04", "DC1" = "DAN-04", "DC2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "OP" = "OP"))
# order by unique id & time_step
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/NPProot_2015.R")
rawic1 <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/ic_all_11April_CG.csv", sep=",", header=T)
# clean NA
rawic1[rawic1 == 'NA'] <- NA
# remove stock measurements
w = which(rawic1$is_stock == "y")
rawic = rawic1[-w,]
# re-name plots
rawic$plot_code <- revalue(rawic$plot_code, c("TRU-4" = "TRU-04", "DC1" = "DAN-04", "DC2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "OP" = "OP"))
# order by unique id & time_step
datafile <- rawic
datafile = set_df_coltypes(datafile, ic_column_types)
ts_ic_2017_afr <- NPProot_ic(subset(datafile, plot_code %in% c("KOG-02", "KOG-03", "KOG-04", "KOG-05", "KOG-06"), ret_type = "list"))
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/NPProot_2015.R")
rawic1 <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/ic_all_11April_CG.csv", sep=",", header=T)
# clean NA
rawic1[rawic1 == 'NA'] <- NA
# remove stock measurements
w = which(rawic1$is_stock == "y")
rawic = rawic1[-w,]
# re-name plots
rawic$plot_code <- revalue(rawic$plot_code, c("TRU-4" = "TRU-04", "DC1" = "DAN-04", "DC2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "OP" = "OP"))
# order by unique id & time_step
datafile <- rawic
datafile = set_df_coltypes(datafile, ic_column_types)
plotname <- "KOG-05"
logmodel = T
fine_root_cor = "Default"
tubed = 0.07
remove_stock_meas = F
library(sqldf)
library(ggplot2)
library(scales)
library(nlme)
library(dplyr)
coef_func = ifelse(logmodel, coef, coefficients) # nls & lm have different methods for extracting coefs.  use this when testing exponent > 1
if (class(datafile) != "data.frame") { # if it's not a dataframe, assume it's a path+filename
data.ic <- read.csv(datafile, na.strings = c("NA", "NaN"))
} else {
data.ic = datafile # data.frame passed in directly
}
data <- subset(data.ic, plot_code == plotname)
if (remove_stock_meas) {
stock_meas = rep(F, nrow(data))
stock_meas[data$is_stock %in% "y"] = T
data <- data[!stock_meas,]
}
if(nrow(data) == 0) { return(NA) }
remove_stock_meas = T
data$ol_under2 <- data$ol_under_2mm_g
data$ol_2to3   <- data$ol_2to3_mm_g
data$ol_3to4   <- data$ol_3to4_mm_g
data$ol_4to5   <- data$ol_4to5_mm_g
data$ol_above5 <- data$ol_above_5mm_g
data$ml_under2 <- data$ml_under_2mm_g
data$ml_2to3   <- data$ml_2to3_mm_g
data$ml_3to4   <- data$ml_3to4_mm_g
data$ml_4to5   <- data$ml_4to5_mm_g
data$ml_above5 <- data$ml_above_5mm_g
data$time_step_cum <- data$time_step*data$time_step_minutes
data$ol_under2[is.na(data$ol_under2)] <- 0
data$ol_2to3[is.na(data$ol_2to3)]     <- 0
data$ol_3to4[is.na(data$ol_3to4)]     <- 0
data$ol_4to5[is.na(data$ol_4to5)]     <- 0
data$ol_above5[is.na(data$ol_above5)] <- 0
data$ml_under2[is.na(data$ml_under2)] <- 0
data$ml_2to3[is.na(data$ml_2to3)]     <- 0
data$ml_3to4[is.na(data$ml_3to4)]     <- 0
data$ml_4to5[is.na(data$ml_4to5)]     <- 0
data$ml_above5[is.na(data$ml_above5)] <- 0
data$day[is.na(data$day)] <- 1  # TO DO. ATTENTION. THIS IS WRONG. WE SHOULD REPLACE BY THE PREVIOUS DAY.
data$this_core <- (paste(as.character(data$year),as.character(data$month),as.character(data$day),as.character(data$ingrowth_core_num), sep="-"))
data = transform(data, persist_id = paste(plotname, ingrowth_core_num, sep="_"))
if (! remove_stock_meas) {
# need to keep track of which measurements are stocks if we don't remove them initially
stock_meas = data[data$is_stock %in% "y", c("persist_id", "plot_code", "ingrowth_core_num", "year", "month", "day")]
stock_meas = stock_meas[!duplicated(stock_meas),]
}
uid <- unique(data$this_core)
xx <- c()
aa <- c()
bb <- c()
cc <- c()
dd <- c()
ee <- c()
ff <- c()
gg <- c()
hh <- c()
ii <- c()
jj <- c()
for (i in 1:length(uid)) {
sub          <- subset(data, subset=(data$this_core == uid[i]))
id           <- tail(sub$this_core, n=1)
# THIS IS WHERE WE SHOULD REPLACE MISSING DAYS: sub$day[is.na(sub$day)] <- sub$day - 1
tot_olunder2  = calc_roots(sub, "ol_under2", plotname) #ol_under2
tot_ol2to3    = calc_roots(sub, "ol_2to3", plotname) #ol_2to3
tot_ol3to4    = calc_roots(sub, "ol_3to4", plotname) #ol_3to4
tot_ol4to5    = calc_roots(sub, "ol_4to5", plotname) #ol_4to5
tot_olabove5  = calc_roots(sub, "ol_above5", plotname) #ol_above5
tot_mlunder2  = calc_roots(sub, "ml_under2", plotname) #ml_under2
tot_ml2to3    = calc_roots(sub, "ml_2to3", plotname) #ml_2to3
tot_ml3to4    = calc_roots(sub, "ml_3to4", plotname) #ml_3to4
tot_ml4to5    = calc_roots(sub, "ml_4to5", plotname) #ml_4to5
tot_mlabove5  = calc_roots(sub, "ml_above5", plotname) #ml_above5
xx       <- rbind(xx, id) # use this
# yy       <- rbind(yy, persist_id) # use this
aa       <- rbind(aa, tot_olunder2) # use this
bb       <- rbind(bb, tot_ol2to3)
cc       <- rbind(cc, tot_ol3to4)
dd       <- rbind(dd, tot_ol4to5)
ee       <- rbind(ee, tot_olabove5)
ff       <- rbind(ff, tot_mlunder2) # use this
gg       <- rbind(gg, tot_ml2to3)
hh       <- rbind(hh, tot_ml3to4)
ii       <- rbind(ii, tot_ml4to5)
jj       <- rbind(jj, tot_mlabove5)
}
data2a <- data.frame(cbind(as.character(xx), as.numeric(as.character(aa)), as.numeric(as.character(bb)), as.numeric(as.character(cc)), as.numeric(as.character(dd)), as.numeric(as.character(ee)), as.numeric(as.character(ff)), as.numeric(as.character(gg)), as.numeric(as.character(hh)), as.numeric(as.character(ii)), as.numeric(as.character(jj))))
colnames(data2a) <- c("this_core", "tot_olunder2", "tot_ol2to3", "tot_ol3to4", "tot_ol4to5", "tot_olabove5", "tot_mlunder2", "tot_ml2to3", "tot_ml3to4", "tot_ml4to5", "tot_mlabove5")
data2a$tot_olunder2 <- as.numeric(as.character(data2a$tot_olunder2))
data2a$tot_ol2to3   <- as.numeric(as.character(data2a$tot_ol2to3))
data2a$tot_ol3to4   <- as.numeric(as.character(data2a$tot_ol3to4))
data2a$tot_ol4to5   <- as.numeric(as.character(data2a$tot_ol4to5))
data2a$tot_olabove5 <- as.numeric(as.character(data2a$tot_olabove5))
data2a$tot_mlunder2 <- as.numeric(as.character(data2a$tot_mlunder2))
data2a$tot_ml2to3   <- as.numeric(as.character(data2a$tot_ml2to3))
data2a$tot_ml3to4   <- as.numeric(as.character(data2a$tot_ml3to4))
data2a$tot_ml4to5   <- as.numeric(as.character(data2a$tot_ml4to5))
data2a$tot_mlabove5 <- as.numeric(as.character(data2a$tot_mlabove5))
df <- data.frame(data2a$tot_olunder2, data2a$tot_ol2to3, data2a$tot_ol3to4, data2a$tot_ol4to5, data2a$tot_olabove5, data2a$tot_mlunder2, data2a$tot_ml2to3, data2a$tot_ml3to4, data2a$tot_ml4to5, data2a$tot_mlabove5)
zz <- rowSums(df, na.rm=T)
data2a$rootztot <- zz
data3 <- sqldf("SELECT data2a.this_core, data.persist_id, AVG(data2a.rootztot), data.year, data.month, data.day FROM data2a JOIN data ON data2a.this_core = data.this_core GROUP BY data2a.this_core")
colnames(data3) <- c("this_core","persist_id", "rootztot","year","month","day")
# dzz is the correction for fine root productivity below 30cm. dzz can be specified in fine_root_cor.
if (fine_root_cor=="Default") {
tubeh = 0 # why is this 0? ask Chris.
# depth profile of roots
depic = (30-tubeh/10)/100
dzz = 0.5*(exp(-7.344*depic)+exp(-1.303*depic))
} else {
dzz <- fine_root_cor
}
head(data3)
# sum total carbon from roots (diameter ~ 14cm, depth ~ 30cm)
data3$ciric = (3.14*tubed^2) # surface area m2
data3$volic = data3$ciric*depic
data3$rootztot[is.na(data3$rootztot)] = 0
data3$totaic = data3$rootztot / (1-dzz)   # total roots estimated by extrapolating timesteps, plus roots growing below 30cm estimated with the correction factor dzz.
data3$ic_MgCha = (data3$totaic/data3$ciric)*10000/(2.1097*1000*1000)  # Mg roots per ha (10000m2 = 1ha, 1Mg = 1000000g divide by 2 for carbon)
data3$d     <- as.character(paste(data3$month, data3$day, data3$year, sep="/"))
data3$date  <- as.Date(data3$d, "%m/%d/%Y")
data3[data3 == 0] <- NA
data4 = data3 %>% group_by(year, month) %>%
dplyr::summarize(day = mean(day, na.rm = T),
threemonthlyNPProot = mean(ic_MgCha, na.rm = T),
threemonthlyNPProot_sd = sd(ic_MgCha, na.rm = T),
date = max(date))
head(data4)
data4       <- data.frame(data4)
head(data4)
str(data4)
data4$d     = as.character(paste(data4$month, data4$day, data4$year, sep="/"))
data4$date  = as.Date(data4$d, "%m/%d/%Y")
data4       = sqldf("SELECT data4.* FROM data4 ORDER BY data4.year, data4.month, data4.day ASC")
data4_pertube       = sqldf("SELECT data3.persist_id, data3.year, data3.month, data3.day, SUM(data3.ic_MgCha) FROM data3 GROUP BY data3.year, data3.month, data3.persist_id")
colnames(data4_pertube) = c("persist_id", "year", "month", "day", "threemonthlyNPProot")
data4_pertube$year  = sub("^(\\d\\d)$", "20\\1", data4_pertube$year) # make 2-digit years into 4-digit years.  Assume 20xx.
data4_pertube$d     = as.character(paste(data4_pertube$month, data4_pertube$day, data4_pertube$year, sep="/"))
data4_pertube$date  = as.Date(data4_pertube$d, "%m/%d/%Y")
data4_pertube       = sqldf("SELECT data4_pertube.* FROM data4_pertube ORDER BY data4_pertube.persist_id, data4_pertube.year, data4_pertube.month, data4_pertube.day ASC")
c_time = as.POSIXlt(data4$date)
c_time = rev(c_time)
tt = difftime(c_time[1:(length(c_time)-1)] , c_time[2:length(c_time)]) # this gets the collection interval
data4$interval = c(90, tt)  # I add 90 days as first collection interval. You can change this.
data4$monthlyNPProot    = (as.numeric(data4$threemonthlyNPProot)/data4$interval) * 30 # TO DO: We should change this to the number of days in that month. need a loop.
data4$monthlyNPProot_se = ((as.numeric(data4$threemonthlyNPProot_sd)/sqrt(16))/data4$interval) * 30
# (mean(data4$monthlyNPProot, na.rm=T))*12
# (mean(data4$monthlyNPProot_se, na.rm=T))*12
data4_pertube = data4_pertube %>%
group_by(persist_id) %>% arrange(persist_id, date) %>%
mutate(interval = ifelse(is.na(lag(date)), 90, as.numeric(difftime(date, lag(date)))),  # I add 90 days as first collection interval. You can change this.
monthlyNPProot = threemonthlyNPProot/interval * 30) # TODO: change to reflect days per month
data4$plot_code = plotname
data4_pertube$plot_code = plotname
data3$plot_code = plotname
data4_pertube$tubenum = sub("^.*_(.*)$", "\\1", data4_pertube$persist_id)
data3$tubenum = sub("^.*_(.*)$", "\\1", data3$persist_id)
data3 = data3 %>% group_by(persist_id) %>%
mutate(date = as.Date(sprintf("%d-%2d-%2d", year, month, day))) %>%
arrange(date) %>%
mutate(prev_meas = lag(date))
if (! remove_stock_meas) {
# remove the first measurement from all tubes if the stock measurement wasn't removed initially
stock_meas_times = unique(with(stock_meas, paste(year, month, day)))
data3 = subset(data3, ! paste(year, month, day) %in% stock_meas_times)
data4 = subset(data4, ! paste(year, month, day) %in% stock_meas_times)
data4_pertube = subset(data4_pertube, ! paste(year, month, day) %in% stock_meas_times)
# match measurements
# remove measurements
}
head(data4)
data4
ts_ic_2017_afr <- NPProot_ic(subset(datafile, plot_code %in% c("KOG-02", "KOG-03", "KOG-04", "KOG-05", "KOG-06"), ret_type = "list"))
ts_ic_2017_afr <- NPProot_ic(subset(datafile, plot_code %in% c("LPG-01", "LPG-02", "ANK-01", "ANK-02", "ANK-03", "BOB-01", "BOB-02", "BOB-03", "BOB-04", "BOB-05", "BOB-06"), ret_type = "list"))
warnings()
ts_ic_2017_afr <- NPProot_ic(subset(datafile, plot_code %in% c("KOG-02", "KOG-03", "KOG-04", "KOG-05", "KOG-06", "LPG-01", "LPG-02", "ANK-01", "ANK-02", "ANK-03", "BOB-01", "BOB-02", "BOB-03", "BOB-04", "BOB-05", "BOB-06"), ret_type = "list"))
ts_ic_2017_sa <- NPProot_ic(subset(datafile, plot_code %in% c("TAM-05", "ESP-01", "WAY-01", "ACJ-01", "TRU-4", "PAN-02", "PAN-03", "KEN-01", "KEN-02", "SPD-01", "SPD-02", "TAM-05", "TAM-06", "TAM-09", "BLZ-11", "BLZ-12", "BLZ-21", "BLZ-22"), ret_type = "list"))
# working: "ACJ-01" "ESP-01" "WAY-01" "SPD-01" "SPD-02" "TAM-05" "TAM-06" "TAM-09" "TRU-04"
# "PAN-01" "PAN-02" "PAN-03" "TAN-01" "TAN-02" "KEN-01" "KEN-02" "ALP-11" "ALP-12" "BLZ-11" "BLZ-12" "BLZ-21" "BLZ-22"
# These don't work:
# "TAN-01", "TAN-02" - time_step_minutes = 5, 10, 15
# "PAN-01" - time_step_minutes = 10, 20, 30
# "ALP-11", "ALP-12" - time_step_minutes = 1, 2, 3, 4
ts_ic_2017_afr <- NPProot_ic(subset(datafile, plot_code %in% c("KOG-02", "KOG-03", "KOG-04", "KOG-05", "KOG-06", "LPG-01", "LPG-02", "ANK-01", "ANK-02", "ANK-03", "BOB-01", "BOB-02", "BOB-03", "BOB-04", "BOB-05", "BOB-06"), ret_type = "list"))
# working: "KOG-02" "KOG-03" "KOG-04" "KOG-05" "KOG-06"
# working (but data has repetitions "the condition has length > 1 and only the first element will be used")
#  (stocks?) "LPG-01", "LPG-02", "ANK-01", "ANK-02", "ANK-03", "BOB-01", "BOB-02", "BOB-03", "BOB-04", "BOB-05", "BOB-06"
# not working: "IVI-01", "IVI-02" - time_step_minutes = 1, 2, 3, 4
ts_ic_2017_sea <- NPProot_ic(subset(datafile, plot_code %in% c("MNG-03", "MNG-04", "SAF-05", "SAF-01", "SAF-02", "DAN-04", "DAN-05", "MLA-01", "MLA-02", "OP"), ret_type = "list"))
# working: "MNG-03", "MNG-04", "SAF-05", "SAF-01", "SAF-02", "DAN-04", "DAN-05", "MLA-01", "MLA-02", "OP"
# not working: "SAF-03", "SAF-04"
# For all of sea, check - time_step = 1, 1, 1 & time_step_minutes = 10, 10, 10
sa <- ts_ic_2017_sa[["three_monthly"]]
sa <- data.frame(sa)
sa
afr <- ts_ic_2017_afr[["three_monthly"]]
afr <- data.frame(afr)
afr
sea <- ts_ic_2017_sea[["three_monthly"]]
sea <- data.frame(sea)
sea
icsa <- ggplot(sa, aes(date, threemonthlyNPProot, colour = factor(sa$plot_code))) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(12,"Paired"), times=5)) +
theme(legend.position = "bottom") +
xlab("") + ylab(expression(paste("Ingrowth Core (MgC ",ha^-1, threemonths^-1, ")", sep=""))) +
#ylim(0, 5) +
ggtitle("South America")
icsa
icafr <- ggplot(afr, aes(date, threemonthlyNPProot, colour = factor(afr$plot_code))) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(12,"Paired"), times=5)) +
theme(legend.position = "bottom") +
xlab("") + ylab(expression(paste("Ingrowth Core (MgC ",ha^-1, threemonths^-1, ")", sep=""))) +
#ylim(0, 5) +
ggtitle("Africa")
icafr
icsea <- ggplot(sea, aes(date, threemonthlyNPProot, colour = factor(sea$plot_code))) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(12,"Paired"), times=5)) +
theme(legend.position = "bottom") +
xlab("") + ylab(expression(paste("Ingrowth Core (MgC ",ha^-1, threemonths^-1, ")", sep=""))) +
#ylim(0, 5) +
ggtitle("South East Asia")
icsea
fig4 <- grid.arrange(icsa, icafr, icsea, ncol=1, nrow=3)
fig4
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/NPProot_2015.R")
rawic1 <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/ic_all_11April_CG.csv", sep=",", header=T)
# clean NA
rawic1[rawic1 == 'NA'] <- NA
# remove stock measurements
w = which(rawic1$is_stock == "y")
rawic = rawic1[-w,]
# re-name plots
rawic$plot_code <- revalue(rawic$plot_code, c("TRU-4" = "TRU-04", "DC1" = "DAN-04", "DC2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "OP" = "OP"))
# order by unique id & time_step
datafile <- rawic
plotname <- "TAN-02"
datafile = set_df_coltypes(datafile, ic_column_types)
logmodel = T
fine_root_cor = "Default"
tubed = 0.07
remove_stock_meas = T
head(datafile)
datafile <- rawic
plotname <- "TAN-01"
head(datafile)
datafile <- rawic
plotname <- "ALP-12"
datafile = set_df_coltypes(datafile, ic_column_types)
head(datafile)
?switch
switch("a", a = 10, b = 20)
switch("b", a = 10, b = 20)
test <- subset(datafile, plot_code %in% c("PAN-01"))
head(test)
test <- subset(datafile, plot_code %in% c("SAF-02"))
head(test, 10)
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/NPProot_2015.R")
rawic1 <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/ic_all_11April_CG.csv", sep=",", header=T)
# clean NA
rawic1[rawic1 == 'NA'] <- NA
# remove stock measurements
w = which(rawic1$is_stock == "y")
rawic = rawic1[-w,]
# re-name plots
rawic$plot_code <- revalue(rawic$plot_code, c("TRU-4" = "TRU-04", "DC1" = "DAN-04", "DC2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "OP" = "OP"))
# order by unique id & time_step
ts_ic_2017_sa <- NPProot_ic(subset(datafile, plot_code %in% c("TAM-05", "ESP-01", "WAY-01", "ACJ-01", "TRU-4", "PAN-02", "PAN-03", "KEN-01", "KEN-02", "SPD-01", "SPD-02", "TAM-05", "TAM-06", "TAM-09", "BLZ-11", "BLZ-12", "BLZ-21", "BLZ-22"), ret_type = "list", tx = "txa"))
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/NPProot_2015.R")
rawic1 <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/ic_all_11April_CG.csv", sep=",", header=T)
# clean NA
rawic1[rawic1 == 'NA'] <- NA
# remove stock measurements
w = which(rawic1$is_stock == "y")
rawic = rawic1[-w,]
# re-name plots
rawic$plot_code <- revalue(rawic$plot_code, c("TRU-4" = "TRU-04", "DC1" = "DAN-04", "DC2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "OP" = "OP"))
datafile <- rawic
datafile = set_df_coltypes(datafile, ic_column_types)
str(datafile)
ts_ic_2017_sa <- NPProot_ic(subset(datafile, plot_code %in% c("TAM-05", "ESP-01", "WAY-01", "ACJ-01", "TRU-4", "PAN-02", "PAN-03", "KEN-01", "KEN-02", "SPD-01", "SPD-02", "TAM-05", "TAM-06", "TAM-09", "BLZ-11", "BLZ-12", "BLZ-21", "BLZ-22"), ret_type = "list", tx = "txa"))
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/NPProot_2015.R")
rawic1 <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/ic_all_11April_CG.csv", sep=",", header=T)
# clean NA
rawic1[rawic1 == 'NA'] <- NA
# remove stock measurements
w = which(rawic1$is_stock == "y")
rawic = rawic1[-w,]
# re-name plots
rawic$plot_code <- revalue(rawic$plot_code, c("TRU-4" = "TRU-04", "DC1" = "DAN-04", "DC2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "OP" = "OP"))
datafile <- rawic
datafile = set_df_coltypes(datafile, ic_column_types)
ts_ic_2017_sa <- NPProot_ic(subset(datafile, plot_code %in% c("TAM-05", "ESP-01", "WAY-01", "ACJ-01", "TRU-4", "PAN-02", "PAN-03", "KEN-01", "KEN-02", "SPD-01", "SPD-02", "TAM-05", "TAM-06", "TAM-09", "BLZ-11", "BLZ-12", "BLZ-21", "BLZ-22"), ret_type = "list", tx = "txa"))
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/NPProot_2015.R")
rawic1 <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/ic_all_11April_CG.csv", sep=",", header=T)
# clean NA
rawic1[rawic1 == 'NA'] <- NA
# remove stock measurements
w = which(rawic1$is_stock == "y")
rawic = rawic1[-w,]
# re-name plots
rawic$plot_code <- revalue(rawic$plot_code, c("TRU-4" = "TRU-04", "DC1" = "DAN-04", "DC2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "OP" = "OP"))
datafile <- rawic
datafile = set_df_coltypes(datafile, ic_column_types)
ts_ic_2017_sa <- NPProot_ic(subset(datafile, plot_code %in% c("TAM-05", "ESP-01", "WAY-01", "ACJ-01", "TRU-4", "PAN-02", "PAN-03", "KEN-01", "KEN-02", "SPD-01", "SPD-02", "TAM-05", "TAM-06", "TAM-09", "BLZ-11", "BLZ-12", "BLZ-21", "BLZ-22"), ret_type = "list", tx = "txa"))
ts_ic_2017_afr <- NPProot_ic(subset(datafile, plot_code %in% c("KOG-02", "KOG-03", "KOG-04", "KOG-05", "KOG-06", "LPG-01", "LPG-02", "ANK-01", "ANK-02", "ANK-03", "BOB-01", "BOB-02", "BOB-03", "BOB-04", "BOB-05", "BOB-06", "MNG-03", "MNG-04"), ret_type = "list"))
ts_ic_2017_sea <- NPProot_ic(subset(datafile, plot_code %in% c("MNG-03", "MNG-04", "SAF-05", "SAF-01", "SAF-02", "DAN-04", "DAN-05", "MLA-01", "MLA-02", "OP"), ret_type = "list"))
sa <- ts_ic_2017_sa[["three_monthly"]]
sa <- data.frame(sa)
sa
afr <- ts_ic_2017_afr[["three_monthly"]]
afr <- data.frame(afr)
afr
sea <- ts_ic_2017_sea[["three_monthly"]]
sea <- data.frame(sea)
sea
icsa <- ggplot(sa, aes(date, threemonthlyNPProot, colour = factor(sa$plot_code))) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(12,"Paired"), times=5)) +
theme(legend.position = "bottom") +
xlab("") + ylab(expression(paste("Ingrowth Core (MgC ",ha^-1, threemonths^-1, ")", sep=""))) +
#ylim(0, 5) +
ggtitle("South America")
icsa
icafr <- ggplot(afr, aes(date, threemonthlyNPProot, colour = factor(afr$plot_code))) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(12,"Paired"), times=5)) +
theme(legend.position = "bottom") +
xlab("") + ylab(expression(paste("Ingrowth Core (MgC ",ha^-1, threemonths^-1, ")", sep=""))) +
#ylim(0, 5) +
ggtitle("Africa")
icafr
icsea <- ggplot(sea, aes(date, threemonthlyNPProot, colour = factor(sea$plot_code))) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(12,"Paired"), times=5)) +
theme(legend.position = "bottom") +
xlab("") + ylab(expression(paste("Ingrowth Core (MgC ",ha^-1, threemonths^-1, ")", sep=""))) +
#ylim(0, 5) +
ggtitle("South East Asia")
icsea
fig4 <- grid.arrange(icsa, icafr, icsea, ncol=1, nrow=3)
fig4
ts_ic_2017_sea <- NPProot_ic(subset(datafile, plot_code %in% c("SAF-05", "SAF-01", "SAF-02", "DAN-04", "DAN-05", "MLA-01", "MLA-02", "OP"), ret_type = "list"))
sea <- ts_ic_2017_sea[["three_monthly"]]
sea <- data.frame(sea)
sea
icsa <- ggplot(sa, aes(date, threemonthlyNPProot, colour = factor(sa$plot_code))) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(12,"Paired"), times=5)) +
theme(legend.position = "bottom") +
xlab("") + ylab(expression(paste("Ingrowth Core (MgC ",ha^-1, threemonths^-1, ")", sep=""))) +
#ylim(0, 5) +
ggtitle("South America")
icsa
icafr <- ggplot(afr, aes(date, threemonthlyNPProot, colour = factor(afr$plot_code))) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(12,"Paired"), times=5)) +
theme(legend.position = "bottom") +
xlab("") + ylab(expression(paste("Ingrowth Core (MgC ",ha^-1, threemonths^-1, ")", sep=""))) +
#ylim(0, 5) +
ggtitle("Africa")
icafr
icsea <- ggplot(sea, aes(date, threemonthlyNPProot, colour = factor(sea$plot_code))) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(12,"Paired"), times=5)) +
theme(legend.position = "bottom") +
xlab("") + ylab(expression(paste("Ingrowth Core (MgC ",ha^-1, threemonths^-1, ")", sep=""))) +
#ylim(0, 5) +
ggtitle("South East Asia")
icsea
fig4 <- grid.arrange(icsa, icafr, icsea, ncol=1, nrow=3)
fig4
icsa <- ggplot(sa, aes(date, threemonthlyNPProot, colour = factor(sa$plot_code))) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(12,"Paired"), times=5)) +
theme(legend.position = "bottom") +
xlab("") + ylab(expression(paste("Ingrowth Core (MgC ",ha^-1, threemonths^-1, ")", sep=""))) +
ylim(0, 5) +
ggtitle("South America")
icsa
icafr <- ggplot(afr, aes(date, threemonthlyNPProot, colour = factor(afr$plot_code))) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(12,"Paired"), times=5)) +
theme(legend.position = "bottom") +
xlab("") + ylab(expression(paste("Ingrowth Core (MgC ",ha^-1, threemonths^-1, ")", sep=""))) +
ylim(0, 5) +
ggtitle("Africa")
icafr
icsea <- ggplot(sea, aes(date, threemonthlyNPProot, colour = factor(sea$plot_code))) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(12,"Paired"), times=5)) +
theme(legend.position = "bottom") +
xlab("") + ylab(expression(paste("Ingrowth Core (MgC ",ha^-1, threemonths^-1, ")", sep=""))) +
ylim(0, 5) +
ggtitle("South East Asia")
icsea
fig4 <- grid.arrange(icsa, icafr, icsea, ncol=1, nrow=3)
fig4
icraw <- ggplot(data_ic, aes(year, month, colour = factor(data_ic$plot_code))) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(12,"Paired"), times=5)) +
scale_shape_manual(values=rep(c(15,16,17,18,19), each=11)) +
theme(legend.position = "bottom")
icraw
icraw <- ggplot(rawic , aes(year, month, colour = factor(rawic$plot_code))) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(12,"Paired"), times=5)) +
scale_shape_manual(values=rep(c(15,16,17,18,19), each=11)) +
theme(legend.position = "bottom")
icraw
icraw <- ggplot(rawic , aes(year, month, colour = factor(rawic$plot_code))) +
geom_point() +
scale_colour_manual(values=rep(brewer.pal(12,"Paired"), times=5)) +
scale_shape_manual(values=rep(c(15,16,17,18,19), each=11))
#theme(legend.position = "bottom")
icraw
test <- function(tx = c("txa", "txb", "txc")){tx = switch(tx, txa = c(10,20,30,40),
txb = c(5,10,15),
txc = c(5,10,15,20))}
test(tx = "txb")
x <- test(tx = "txb")
x
x <- test(tx = "txc")
x
x <- test(tx = "txa")
x
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/NPProot_2015.R")
rawic1 <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/ic_all_11April_CG.csv", sep=",", header=T)
# clean NA
rawic1[rawic1 == 'NA'] <- NA
# remove stock measurements
w = which(rawic1$is_stock == "y")
rawic = rawic1[-w,]
# re-name plots
rawic$plot_code <- revalue(rawic$plot_code, c("TRU-4" = "TRU-04", "DC1" = "DAN-04", "DC2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "OP" = "OP"))
datafile <- rawic
datafile = set_df_coltypes(datafile, ic_column_types)
ts_ic_2017_sea <- NPProot_ic(subset(datafile, plot_code %in% c("SAF-05", "SAF-01", "SAF-02", "DAN-04", "DAN-05", "MLA-01", "MLA-02", "OP"), ret_type = "list", , txtype = "txc"))
