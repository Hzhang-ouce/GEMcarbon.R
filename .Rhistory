demo()
Hershey
graphics
graphics()
plotmath
require(ggplot2)
require(gridExtra)
raw_totsrA   <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/eltr_rsoil_total_feb17.csv", sep=",", header=T)
unique(raw_totsrA$plot_code)
raw_totsrA$date <- as.Date(paste(raw_totsrA$year, raw_totsrA$month, raw_totsrA$day, sep="."), format="%Y.%m.%d")
a <- subset(raw_totsrA, plot_code = "WAY-01")
b <- subset(raw_totsrA, plot_code = "ESP-01")
c <- subset(raw_totsrA, plot_code = "ACJ-01")
d <- subset(raw_totsrA, plot_code = "PAN-02")
e <- subset(raw_totsrA, plot_code = "PAN-03")
f <- subset(raw_totsrA, plot_code = "SPD-01")
g <- subset(raw_totsrA, plot_code = "SPD-02")
h <- subset(raw_totsrA, plot_code = "TRU-04")
i <- subset(raw_totsrA, plot_code = "TAM-05")
j <- subset(raw_totsrA, plot_code = "TAM-06")
k <- subset(raw_totsrA, plot_code = "TAM-09")
aa <- ggplot(a) + geom_point(aes(x=date, y=co2ref_ppm_sec, colour=factor(year))) + ggtitle(a$plot_code)
bb <- ggplot(b) + geom_point(aes(x=date, y=co2ref_ppm_sec, colour=factor(year))) + ggtitle(b$plot_code)
cc <- ggplot(c) + geom_point(aes(x=date, y=co2ref_ppm_sec, colour=factor(year))) + ggtitle(c$plot_code)
dd <- ggplot(d) + geom_point(aes(x=date, y=co2ref_ppm_sec, colour=factor(year))) + ggtitle(d$plot_code)
ee <- ggplot(e) + geom_point(aes(x=date, y=co2ref_ppm_sec, colour=factor(year))) + ggtitle(e$plot_code)
ff <- ggplot(f) + geom_point(aes(x=date, y=co2ref_ppm_sec, colour=factor(year))) + ggtitle(f$plot_code)
gg <- ggplot(g) + geom_point(aes(x=date, y=co2ref_ppm_sec, colour=factor(year))) + ggtitle(g$plot_code)
hh <- ggplot(h) + geom_point(aes(x=date, y=co2ref_ppm_sec, colour=factor(year))) + ggtitle(h$plot_code)
ii <- ggplot(i) + geom_point(aes(x=date, y=co2ref_ppm_sec, colour=factor(year))) + ggtitle(i$plot_code)
jj <- ggplot(j) + geom_point(aes(x=date, y=co2ref_ppm_sec, colour=factor(year))) + ggtitle(j$plot_code)
kk <- ggplot(k) + geom_point(aes(x=date, y=co2ref_ppm_sec, colour=factor(year))) + ggtitle(k$plot_code)
fig1 <- grid.arrange(aa, bb, cc, ncol=4, nrow=3) #, dd, ee, ff, gg, hh, ii, jj, kk,
fig1
aa
bb
fig1 <- grid.arrange(aa, bb, ncol=1, nrow=2) #cc, dd, ee, ff, gg, hh, ii, jj, kk,
fig1
fig1 <- grid.arrange(aa, bb, cc, dd, ee, ff, gg, hh, ii, jj, kk, ncol=3, nrow=4)
fig1
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/flf_2016.R")
data_flf <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/flf_all_3April.csv", sep=",", header=T)
data_flf$plot_code <- revalue(data_flf$plot_code, c("Tower" = "SAF-05", "E" = "SAF-03", "B South" = "SAF-01", "B North" = "SAF-02", "Seraya" = "MLA-02", "Belian" = "MLA-01", "LF" = "SAF-04", "Danum Carbon 1" = "DAN-04", "Danum Carbon 2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "Ank-02" = "ANK-02"))
unique(data_flf$plot_code)
ts_flf_2017 <- flf(subset(data_flf, plot_code %in% c("TAM-06")), plotit = T)
head(ts_flf_2017)
str(data5)
ts_flf_2017 <- flf(subset(data_flf, plot_code %in% c("TAM-06")), plotit = T)
head(ts_flf_2017)
ts_flf_2017 <- flf(subset(data_flf, plot_code %in% c("SPD-02")), plotit = T)
head(ts_flf_2017)
ts_flf_2017 <- flf(subset(data_flf, plot_code %in% c("WAY-01")), plotit = T)
head(ts_flf_2017)
ts_flf_2017 <- flf(subset(data_flf, plot_code %in% c("WAY-01")), plotit = T)
head(ts_flf_2017)
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/flf_2016.R")
data_flf <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/flf_all_3April.csv", sep=",", header=T)
data_flf$plot_code <- revalue(data_flf$plot_code, c("Tower" = "SAF-05", "E" = "SAF-03", "B South" = "SAF-01", "B North" = "SAF-02", "Seraya" = "MLA-02", "Belian" = "MLA-01", "LF" = "SAF-04", "Danum Carbon 1" = "DAN-04", "Danum Carbon 2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "Ank-02" = "ANK-02"))
unique(data_flf$plot_code)
library(zoo)
library(sqldf)
require(ggplot2)
library(dplyr)
data_flf$plot_code <- revalue(data_flf$plot_code, c("Tower" = "SAF-05", "E" = "SAF-03", "B South" = "SAF-01", "B North" = "SAF-02", "Seraya" = "MLA-02", "Belian" = "MLA-01", "LF" = "SAF-04", "Danum Carbon 1" = "DAN-04", "Danum Carbon 2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "Ank-02" = "ANK-02"))
?revalue
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library(zoo)
library(sqldf)
require(ggplot2)
library(dplyr)
library(plyr)
data_flf$plot_code <- revalue(data_flf$plot_code, c("Tower" = "SAF-05", "E" = "SAF-03", "B South" = "SAF-01", "B North" = "SAF-02", "Seraya" = "MLA-02", "Belian" = "MLA-01", "LF" = "SAF-04", "Danum Carbon 1" = "DAN-04", "Danum Carbon 2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "Ank-02" = "ANK-02"))
unique(data_flf$plot_code)
library(zoo)
library(sqldf)
library(dplyr)
library(plyr)
require(ggplot2)
require(gridExtra)
ts_flf_2017 <- flf(subset(data_flf, plot_code %in% c("SPD-02")), plotit = T)
head(ts_flf_2017)
ts_flf_2017 <- flf(subset(data_flf, plot_code %in% c("KEN-01")), plotit = T) # c("KEN-02", "SPD-02", "WAY-01", )
head(ts_flf_2017)
ts_flf_2017 <- flf(subset(data_flf, plot_code %in% c("TAM-09")), plotit = T) # c("KEN-02", "SPD-02", "WAY-01", )
head(ts_flf_2017)
ts_flf_2017 <- flf(subset(data_flf, plot_code %in% c("ALP-11")), plotit = T) # c("KEN-02", "SPD-02", "WAY-01", )
head(ts_flf_2017)
ts_flf_2017 <- flf(subset(data_flf, plot_code %in% c("ALP-12")), plotit = T) # c("KEN-02", "SPD-02", "WAY-01", )
head(ts_flf_2017)
ts_flf_2017 <- flf(subset(data_flf, plot_code %in% c("ESP-01")), plotit = T) # c("KEN-02", "SPD-02", "WAY-01", )
head(ts_flf_2017)
library(zoo)
library(sqldf)
require(ggplot2)
library(dplyr)
library(plyr)
library(zoo)
library(sqldf)
require(ggplot2)
library(dplyr)
library(plyr)
data_flf <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/flf_all_3April.csv", sep=",", header=T)
data_flf$plot_code <- revalue(data_flf$plot_code, c("Tower" = "SAF-05", "E" = "SAF-03", "B South" = "SAF-01", "B North" = "SAF-02", "Seraya" = "MLA-02", "Belian" = "MLA-01", "LF" = "SAF-04", "Danum Carbon 1" = "DAN-04", "Danum Carbon 2" = "DAN-05", "BZ11" = "BLZ-11", "BZ12" = "BLZ-12", "BZ22" = "BLZ-22", "BZ21" = "BLZ-21", "Ank-02" = "ANK-02"))
unique(data_flf$plot_code)
write.csv(data_flf, file="flf_all_4April.csv")
data_flf <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/flf_all_4April.csv", sep=",", header=T)
setwd("~/Github/gemcarbon_data/raw_data_ingembd")
write.csv(data_flf, file="flf_all_4April.csv")
data_flf <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/flf_all_4April.csv", sep=",", header=T)
unique(data_flf$plot_code)
plotname <- "ALP-11"
plotname
data_flf2 <- c()
data_flf2 = subset(data_flf, plot_code == plotname)
data_flf2 = data_flf2 %>% dplyr::rename(plot = plot_code,
num = litterfall_trap_num,
leaves = leaves_g_per_trap,
twigs = twigs_g_per_trap,
flowers = flowers_g_per_trap,
fruits = fruits_g_per_trap,
brom = bromeliads_g_per_trap,
epi = epiphytes_g_per_trap,
other = other_g_per_trap) %>%
dplyr::mutate(seeds = NA,
date = as.Date(paste(data_flf2$year, data_flf2$month, data_flf2$day, sep="."), format="%Y.%m.%d"))
head(data_flf2)
tail(data_flf2)
data_flf2$leaves
x <- cbind(data_flf2$leaves, data_flf2$twigs, data_flf2$flowers, data_flf2$fruits, data_flf2$seeds, data_flf2$brom, data_flf2$epi, data_flf2$other)
data_flf2$total <- rowSums(x, na.rm = T)
# In some cases, only total litterfall is recorded
total_only = data_flf2$total == 0 & ! is.na(data_flf2$total_litterfall_g_per_trap)
data_flf2[total_only,]$total = data_flf2[total_only,]$total_litterfall_g_per_trap
data_flf2$total
data_flf2$total[which(data_flf2$total>300)] <- NA   # remove outliers with totalf > 300
data_flf2$total[which(data_flf2$total<0)]   <- NA   # remove implausible totallf (negative litter)
data_flf2$codeb <- paste(data_flf2$plot, data_flf2$num, sep=".")
data_flf2$codew <- paste(data_flf2$plot, data_flf2$num, data_flf2$year, data_flf2$month, data_flf2$day, sep=".")
uid             <- unique(data_flf2$codeb)
xx              <- c()
yy              <- c()
aa              <- c()
bb              <- c()
cc              <- c()
dd              <- c()
ee              <- c()
ff              <- c()
gg              <- c()
hh              <- c()
for (i in 1:length(data_flf2$num)) {
sub       <- subset(data_flf2, subset=(data_flf2$codeb == uid[i]))
if(length(sub$codeb) > 1) {
meas_int      <- difftime(sub$date[1:(length(sub$date)-1)], sub$date[2:length(sub$date)], units="days")
meas_int_num  <- as.numeric(as.character(meas_int))
aleaves       <- tail(sub$leaves,-1)
atwigs        <- tail(sub$twigs,-1)
aflowers      <- tail(sub$flowers,-1)
afruits       <- tail(sub$fruits,-1)
abrom         <- tail(sub$brom,-1)
aepi          <- tail(sub$epi,-1)
aother        <- tail(sub$other,-1)
atotal        <- tail(sub$total,-1)
bleaves       <- aleaves/(-meas_int_num)
btwigs        <- atwigs/(-meas_int_num)
bflowers      <- aflowers/(-meas_int_num)
bfruits       <- afruits/(-meas_int_num)
bbrom         <- abrom/(-meas_int_num)
bepi          <- aepi/(-meas_int_num)
bother        <- aother/(-meas_int_num)
btotal        <- atotal/(-meas_int_num)
id            <- tail(sub$codew,-1)
xx            <- c(xx, id)
yy            <- c(yy, meas_int_num)
aa            <- c(aa, bleaves)
bb            <- c(bb, btwigs)
cc            <- c(cc, bflowers)
dd            <- c(dd, bfruits)
ee            <- c(ee, bbrom)
ff            <- c(ff, bepi)
gg            <- c(gg, bother)
hh            <- c(hh, btotal)
print(xx)
} else {
# print(paste("row number:", i))
# print(paste("trap number:", sub$num))
# print(paste("subset length:", length(sub$codeb)))
if(exists("error_df")) {
error_df <- rbind(error_df, data.frame(row = i, trap = sub$num[i], sub_len = length(sub$codeb)))
} else {
error_df <- data.frame(row = i, trap = sub$num[i], sub_len = length(sub$codeb))
}
}
}
error_df_g <<- error_df # assigning to global variable outside the function.
print(paste(nrow(error_df), "errors in the data.  See error_df_g."))
data2 <- data.frame(cbind(xx, yy, aa, bb, cc, dd, ee, ff, gg, hh))
colnames(data2) <- c("id", "meas_int_days", "bleavesflf_g_trap_day", "btwigs", "bflowers", "bfruits", "bbrom", "bepi", "bother", "btotal")
data3 <- sqldf("SELECT data_flf2.*, data2.* FROM data2 JOIN data_flf2 ON data2.id = data_flf2.codew")
data3$leavesflf_g_trap_day <- as.numeric(as.character(data3$bleavesflf_g_trap_day))
data3$meas_int_days        <- as.numeric(as.character(data3$meas_int_days))
data3$twigs                <- as.numeric(as.character(data3$btwigs))
data3$flowers              <- as.numeric(as.character(data3$bflowers))
data3$fruits               <- as.numeric(as.character(data3$bfruits))
data3$brom                 <- as.numeric(as.character(data3$bbrom))
data3$epi                  <- as.numeric(as.character(data3$bepi))
data3$other                <- as.numeric(as.character(data3$bother))
data3$total                <- as.numeric(as.character(data3$btotal))
data3$leavesflf_MgC_ha_month  <- (((data3$leavesflf_g_trap_day*(10000/0.25))*0.000001)*0.49)*30 # TO DO: multiply by number of days in that month, not 30.
data3$twigsflf   <- (((data3$twigs*(10000/0.25))*0.000001)*0.49)*30
data3$flowersflf <- (((data3$flowers*(10000/0.25))*0.000001)*0.49)*30
data3$fruitsflf  <- (((data3$fruits*(10000/0.25))*0.000001)*0.49)*30
data3$bromflf    <- (((data3$brom*(10000/0.25))*0.000001)*0.49)*30
data3$epiflf     <- (((data3$epi*(10000/0.25))*0.000001)*0.49)*30
data3$otherflf   <- (((data3$other*(10000/0.25))*0.000001)*0.49)*30
data3$totalflf   <- (((data3$total*(10000/0.25))*0.000001)*0.49)*30
data4 = data3 %>% group_by(plot, num, year, month) %>%
dplyr::summarize(leavesflf_MgC_ha_month_trap = mean(leavesflf_MgC_ha_month, na.rm = T),
twigsflf_MgC_ha_month_trap = mean(twigsflf, na.rm = T),
flowersflf_MgC_ha_month_trap = mean(flowersflf, na.rm = T),
fruitsflf_MgC_ha_month_trap = mean(fruitsflf, na.rm = T),
bromflf_MgC_ha_month_trap = mean(bromflf, na.rm = T),
epiflf_MgC_ha_month_trap = mean(epiflf, na.rm = T),
otherflf_MgC_ha_month_trap = mean(otherflf, na.rm = T),
totalflf_MgC_ha_month_trap = mean(totalflf, na.rm = T),
sd_leavesflf = sd(leavesflf_MgC_ha_month, na.rm = T),
sd_twigsflf = sd(twigsflf, na.rm = T),
sd_flowersflf = sd(flowersflf, na.rm = T),
sd_fruitsflf = sd(fruitsflf, na.rm = T),
sd_bromflf = sd(bromflf, na.rm = T),
sd_epiflf = sd(epiflf, na.rm = T),
sd_otherflf = sd(otherflf, na.rm = T),
sd_totalflf = sd(totalflf, na.rm = T)) %>%
dplyr::rename(litterfall_trap_num = num)
data4$se_leavesflf  <- data4$sd_leavesflf/sqrt(length(unique(data3$year)))
data4$se_twigsflf   <- data4$sd_twigsflf/sqrt(length(unique(data3$year)))
data4$se_flowersflf <- data4$sd_flowersflf/sqrt(length(unique(data3$year)))
data4$se_fruitsflf  <- data4$sd_fruitsflf/sqrt(length(unique(data3$year)))
data4$se_bromflf    <- data4$sd_bromflf/sqrt(length(unique(data3$year)))
data4$se_epiflf     <- data4$sd_epiflf/sqrt(length(unique(data3$year)))
data4$se_otherflf   <- data4$sd_otherflf/sqrt(length(unique(data3$year)))
data4$se_totalflf   <- data4$sd_totalflf/sqrt(length(unique(data3$year)))
data5            <- sqldf("SELECT plot, year, month,
AVG(leavesflf_MgC_ha_month), AVG(twigsflf), AVG(flowersflf), AVG(fruitsflf), AVG(bromflf), AVG(epiflf), AVG(otherflf), AVG(totalflf),
STDEV(leavesflf_MgC_ha_month), STDEV(twigsflf), STDEV(flowersflf), STDEV(fruitsflf), STDEV(bromflf), STDEV(epiflf), STDEV(otherflf), STDEV(totalflf)
FROM data3 GROUP BY plot, year, month")
colnames(data5)  <- c("plot", "year", "month","leavesflf_MgC_ha_month", "twigsflf_MgC_ha_month", "flowersflf_MgC_ha_month", "fruitsflf_MgC_ha_month", "bromflf_MgC_ha_month", "epiflf_MgC_ha_month", "otherflf_MgC_ha_month", "totalflf_MgC_ha_month", "sd_leavesflf", "sd_twigsflf", "sd_flowersflf", "sd_fruitsflf", "sd_bromflf", "sd_epiflf", "sd_otherflf", "sd_totalflf") # Note: SD is 0 if we only have a year's worth of data!
data5$se_leavesflf  <- data5$sd_leavesflf/sqrt(length(unique(data3$num)))
data5$se_twigsflf   <- data5$sd_twigsflf/sqrt(length(unique(data3$num)))
data5$se_flowersflf <- data5$sd_flowersflf/sqrt(length(unique(data3$num)))
data5$se_fruitsflf  <- data5$sd_fruitsflf/sqrt(length(unique(data3$num)))
data5$se_bromflf    <- data5$sd_bromflf/sqrt(length(unique(data3$num)))
data5$se_epiflf     <- data5$sd_epiflf/sqrt(length(unique(data3$num)))
data5$se_otherflf   <- data5$sd_otherflf/sqrt(length(unique(data3$num)))
data5$se_totalflf   <- data5$sd_totalflf/sqrt(length(unique(data3$num)))
data5$date      <- strptime(paste(as.character(data5$year), as.character(data5$month), as.character(15), sep="-"), format="%Y-%m-%d")
data5$date      <- as.POSIXct(data5$date)
data5$yearmonth <- as.yearmon(data5$date)
top <- data5$totalflf_MgC_ha_month + data5$sd_totalflf
data5$date <- as.Date(data5$date)
plot1 <- ggplot(data = data5, aes(x = date, y = totalflf_MgC_ha_month, na.rm = T)) +
geom_point(colour = data5$year, size = 1.5) +
xlab("") + ylab(expression(paste("Total fine litterfall (MgC ", ha^-1, mo^-1, ")", sep=""))) +
ylim(0, max(top, na.rm = T)) +
ggtitle(plotname)
top <- data5$twigsflf_MgC_ha_month+data5$sd_twigsflf
plot2 <- ggplot(data = data5, aes(x = date, y = twigsflf_MgC_ha_month, na.rm = T)) +
geom_point(colour = "navy", size = 1.5) +
geom_point(aes(x = date, y = leavesflf_MgC_ha_month), colour = "seagreen", size = 1.5) +
xlab("") + ylab(expression(paste("Fine litterfall components \n leaves & twigs (MgC ",ha^-1, mo^-1, ")", sep=""))) +
ylim(0, max(top, na.rm = T))
top <- data5$fruitsflf_MgC_ha_month  + data5$sd_fruitsflf
plot3 <- ggplot(data = data5, aes(x = date, y = fruitsflf_MgC_ha_month, na.rm = T)) +
geom_point(colour = "deeppink4", size = 1.5) +
geom_point(aes(x = date, y = flowersflf_MgC_ha_month), colour = "red2", size = 1.5) +
xlab("") + ylab(expression(paste("Fine litterfall components \n fruit & flowers (MgC ",ha^-1, mo^-1, ")", sep=""))) +
ylim(0, max(top, na.rm = T))
# geom_ribbon(data = data5, aes(ymin=twigsflf_MgC_ha_month-sd_twigsflf , ymax=twigsflf_MgC_ha_month+sd_twigsflf), alpha=0.2) +
fig <- grid.arrange(plot1, plot2, plot3, ncol=1, nrow=3)
data_flf <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/flf_all_4April.csv", sep=",", header=T)
ts_flf_2017 <- flf(subset(data_flf, plot_code %in% c("ALP-12")), plotit = T) # c("KEN-02", "SPD-02", "WAY-01", "ALP-11", )  ALP-12
head(ts_flf_2017)
setwd("~/Github/GEMcarbon.R")
source("~/Github/GEMcarbon.R/flf_2016.R")
ts_flf_2017 <- flf(subset(data_flf, plot_code %in% c("ALP-12")), plotit = T) # c("KEN-02", "SPD-02", "WAY-01", "ALP-11", )  ALP-12
head(ts_flf_2017)
library(zoo)
library(sqldf)
require(ggplot2)
library(dplyr)
library(plyr)
data_flf <- read.table("~/Github/gemcarbon_data/raw_data_ingembd/flf_all_4April.csv", sep=",", header=T)
unique(data_flf$plot_code)
plotname <- "ALP-12"
# new data frame
data_flf2 <- c()
data_flf2 = subset(data_flf, plot_code == plotname)
data_flf2 = data_flf2 %>% dplyr::rename(plot = plot_code,
num = litterfall_trap_num,
leaves = leaves_g_per_trap,
twigs = twigs_g_per_trap,
flowers = flowers_g_per_trap,
fruits = fruits_g_per_trap,
brom = bromeliads_g_per_trap,
epi = epiphytes_g_per_trap,
other = other_g_per_trap) %>%
dplyr::mutate(seeds = NA,
date = as.Date(paste(data_flf2$year, data_flf2$month, data_flf2$day, sep="."), format="%Y.%m.%d"))
x <- cbind(data_flf2$leaves, data_flf2$twigs, data_flf2$flowers, data_flf2$fruits, data_flf2$seeds, data_flf2$brom, data_flf2$epi, data_flf2$other)
data_flf2$total <- rowSums(x, na.rm = T)
data_flf2$total[which(data_flf2$total>300)] <- NA   # remove outliers with totalf > 300
data_flf2$total[which(data_flf2$total<0)]   <- NA   # remove implausible totallf (negative litter)
data_flf2$codeb <- paste(data_flf2$plot, data_flf2$num, sep=".")
data_flf2$codew <- paste(data_flf2$plot, data_flf2$num, data_flf2$year, data_flf2$month, data_flf2$day, sep=".")
uid             <- unique(data_flf2$codeb)
xx              <- c()
yy              <- c()
aa              <- c()
bb              <- c()
cc              <- c()
dd              <- c()
ee              <- c()
ff              <- c()
gg              <- c()
hh              <- c()
for (i in 1:length(data_flf2$num)) {
sub       <- subset(data_flf2, subset=(data_flf2$codeb == uid[i]))
if(length(sub$codeb) > 1) {
meas_int      <- difftime(sub$date[1:(length(sub$date)-1)], sub$date[2:length(sub$date)], units="days")
meas_int_num  <- as.numeric(as.character(meas_int))
aleaves       <- tail(sub$leaves,-1)
atwigs        <- tail(sub$twigs,-1)
aflowers      <- tail(sub$flowers,-1)
afruits       <- tail(sub$fruits,-1)
abrom         <- tail(sub$brom,-1)
aepi          <- tail(sub$epi,-1)
aother        <- tail(sub$other,-1)
atotal        <- tail(sub$total,-1)
bleaves       <- aleaves/(-meas_int_num)
btwigs        <- atwigs/(-meas_int_num)
bflowers      <- aflowers/(-meas_int_num)
bfruits       <- afruits/(-meas_int_num)
bbrom         <- abrom/(-meas_int_num)
bepi          <- aepi/(-meas_int_num)
bother        <- aother/(-meas_int_num)
btotal        <- atotal/(-meas_int_num)
id            <- tail(sub$codew,-1)
xx            <- c(xx, id)
yy            <- c(yy, meas_int_num)
aa            <- c(aa, bleaves)
bb            <- c(bb, btwigs)
cc            <- c(cc, bflowers)
dd            <- c(dd, bfruits)
ee            <- c(ee, bbrom)
ff            <- c(ff, bepi)
gg            <- c(gg, bother)
hh            <- c(hh, btotal)
print(xx)
} else {
# print(paste("row number:", i))
# print(paste("trap number:", sub$num))
# print(paste("subset length:", length(sub$codeb)))
if(exists("error_df")) {
error_df <- rbind(error_df, data.frame(row = i, trap = sub$num[i], sub_len = length(sub$codeb)))
} else {
error_df <- data.frame(row = i, trap = sub$num[i], sub_len = length(sub$codeb))
}
}
}
error_df_g <<- error_df # assigning to global variable outside the function.
print(paste(nrow(error_df), "errors in the data.  See error_df_g."))
data2 <- data.frame(cbind(xx, yy, aa, bb, cc, dd, ee, ff, gg, hh))
colnames(data2) <- c("id", "meas_int_days", "bleavesflf_g_trap_day", "btwigs", "bflowers", "bfruits", "bbrom", "bepi", "bother", "btotal")
# get day, month, year from data_flf2
data3 <- sqldf("SELECT data_flf2.*, data2.* FROM data2 JOIN data_flf2 ON data2.id = data_flf2.codew")
# OR you can set the data type in your sqldf("...", method = c("character", "numeric", "numeric", "numeric"))
data3$leavesflf_g_trap_day <- as.numeric(as.character(data3$bleavesflf_g_trap_day))
data3$meas_int_days        <- as.numeric(as.character(data3$meas_int_days))
data3$twigs                <- as.numeric(as.character(data3$btwigs))
data3$flowers              <- as.numeric(as.character(data3$bflowers))
data3$fruits               <- as.numeric(as.character(data3$bfruits))
data3$brom                 <- as.numeric(as.character(data3$bbrom))
data3$epi                  <- as.numeric(as.character(data3$bepi))
data3$other                <- as.numeric(as.character(data3$bother))
data3$total                <- as.numeric(as.character(data3$btotal))
data3$leavesflf_MgC_ha_month  <- (((data3$leavesflf_g_trap_day*(10000/0.25))*0.000001)*0.49)*30 # TO DO: multiply by number of days in that month, not 30.
data3$twigsflf   <- (((data3$twigs*(10000/0.25))*0.000001)*0.49)*30
data3$flowersflf <- (((data3$flowers*(10000/0.25))*0.000001)*0.49)*30
data3$fruitsflf  <- (((data3$fruits*(10000/0.25))*0.000001)*0.49)*30
data3$bromflf    <- (((data3$brom*(10000/0.25))*0.000001)*0.49)*30
data3$epiflf     <- (((data3$epi*(10000/0.25))*0.000001)*0.49)*30
data3$otherflf   <- (((data3$other*(10000/0.25))*0.000001)*0.49)*30
data3$totalflf   <- (((data3$total*(10000/0.25))*0.000001)*0.49)*30
data4 = data3 %>% group_by(plot, num, year, month) %>%
dplyr::summarize(leavesflf_MgC_ha_month_trap = mean(leavesflf_MgC_ha_month, na.rm = T),
twigsflf_MgC_ha_month_trap = mean(twigsflf, na.rm = T),
flowersflf_MgC_ha_month_trap = mean(flowersflf, na.rm = T),
fruitsflf_MgC_ha_month_trap = mean(fruitsflf, na.rm = T),
bromflf_MgC_ha_month_trap = mean(bromflf, na.rm = T),
epiflf_MgC_ha_month_trap = mean(epiflf, na.rm = T),
otherflf_MgC_ha_month_trap = mean(otherflf, na.rm = T),
totalflf_MgC_ha_month_trap = mean(totalflf, na.rm = T),
sd_leavesflf = sd(leavesflf_MgC_ha_month, na.rm = T),
sd_twigsflf = sd(twigsflf, na.rm = T),
sd_flowersflf = sd(flowersflf, na.rm = T),
sd_fruitsflf = sd(fruitsflf, na.rm = T),
sd_bromflf = sd(bromflf, na.rm = T),
sd_epiflf = sd(epiflf, na.rm = T),
sd_otherflf = sd(otherflf, na.rm = T),
sd_totalflf = sd(totalflf, na.rm = T)) %>%
dplyr::rename(litterfall_trap_num = num)
# calculate standard error sd/sqrt(length(unique(data3$year)))
data4$se_leavesflf  <- data4$sd_leavesflf/sqrt(length(unique(data3$year)))
data4$se_twigsflf   <- data4$sd_twigsflf/sqrt(length(unique(data3$year)))
data4$se_flowersflf <- data4$sd_flowersflf/sqrt(length(unique(data3$year)))
data4$se_fruitsflf  <- data4$sd_fruitsflf/sqrt(length(unique(data3$year)))
data4$se_bromflf    <- data4$sd_bromflf/sqrt(length(unique(data3$year)))
data4$se_epiflf     <- data4$sd_epiflf/sqrt(length(unique(data3$year)))
data4$se_otherflf   <- data4$sd_otherflf/sqrt(length(unique(data3$year)))
data4$se_totalflf   <- data4$sd_totalflf/sqrt(length(unique(data3$year)))
data5            <- sqldf("SELECT plot, year, month,
AVG(leavesflf_MgC_ha_month), AVG(twigsflf), AVG(flowersflf), AVG(fruitsflf), AVG(bromflf), AVG(epiflf), AVG(otherflf), AVG(totalflf),
STDEV(leavesflf_MgC_ha_month), STDEV(twigsflf), STDEV(flowersflf), STDEV(fruitsflf), STDEV(bromflf), STDEV(epiflf), STDEV(otherflf), STDEV(totalflf)
FROM data3 GROUP BY plot, year, month")
colnames(data5)  <- c("plot", "year", "month","leavesflf_MgC_ha_month", "twigsflf_MgC_ha_month", "flowersflf_MgC_ha_month", "fruitsflf_MgC_ha_month", "bromflf_MgC_ha_month", "epiflf_MgC_ha_month", "otherflf_MgC_ha_month", "totalflf_MgC_ha_month", "sd_leavesflf", "sd_twigsflf", "sd_flowersflf", "sd_fruitsflf", "sd_bromflf", "sd_epiflf", "sd_otherflf", "sd_totalflf") # Note: SD is 0 if we only have a year's worth of data!
data5$se_leavesflf  <- data5$sd_leavesflf/sqrt(length(unique(data3$num)))
data5$se_twigsflf   <- data5$sd_twigsflf/sqrt(length(unique(data3$num)))
data5$se_flowersflf <- data5$sd_flowersflf/sqrt(length(unique(data3$num)))
data5$se_fruitsflf  <- data5$sd_fruitsflf/sqrt(length(unique(data3$num)))
data5$se_bromflf    <- data5$sd_bromflf/sqrt(length(unique(data3$num)))
data5$se_epiflf     <- data5$sd_epiflf/sqrt(length(unique(data3$num)))
data5$se_otherflf   <- data5$sd_otherflf/sqrt(length(unique(data3$num)))
data5$se_totalflf   <- data5$sd_totalflf/sqrt(length(unique(data3$num)))
data5$date      <- strptime(paste(as.character(data5$year), as.character(data5$month), as.character(15), sep="-"), format="%Y-%m-%d")
data5$date      <- as.POSIXct(data5$date)
data5$yearmonth <- as.yearmon(data5$date)
if (plotit==T) {
top <- data5$totalflf_MgC_ha_month + data5$sd_totalflf
data5$date <- as.Date(data5$date)
plot1 <- ggplot(data = data5, aes(x = date, y = totalflf_MgC_ha_month, na.rm = T)) +
geom_point(colour = data5$year, size = 1.5) +
xlab("") + ylab(expression(paste("Total fine litterfall (MgC ", ha^-1, mo^-1, ")", sep=""))) +
ylim(0, max(top, na.rm = T)) +
ggtitle(plotname)
top <- data5$twigsflf_MgC_ha_month+data5$sd_twigsflf
plot2 <- ggplot(data = data5, aes(x = date, y = twigsflf_MgC_ha_month, na.rm = T)) +
geom_point(colour = "navy", size = 1.5) +
geom_point(aes(x = date, y = leavesflf_MgC_ha_month), colour = "seagreen", size = 1.5) +
xlab("") + ylab(expression(paste("Fine litterfall components \n leaves & twigs (MgC ",ha^-1, mo^-1, ")", sep=""))) +
ylim(0, max(top, na.rm = T))
top <- data5$fruitsflf_MgC_ha_month  + data5$sd_fruitsflf
plot3 <- ggplot(data = data5, aes(x = date, y = fruitsflf_MgC_ha_month, na.rm = T)) +
geom_point(colour = "deeppink4", size = 1.5) +
geom_point(aes(x = date, y = flowersflf_MgC_ha_month), colour = "red2", size = 1.5) +
xlab("") + ylab(expression(paste("Fine litterfall components \n fruit & flowers (MgC ",ha^-1, mo^-1, ")", sep=""))) +
ylim(0, max(top, na.rm = T))
# geom_ribbon(data = data5, aes(ymin=twigsflf_MgC_ha_month-sd_twigsflf , ymax=twigsflf_MgC_ha_month+sd_twigsflf), alpha=0.2) +
fig <- grid.arrange(plot1, plot2, plot3, ncol=1, nrow=3)
}
head(data5)
